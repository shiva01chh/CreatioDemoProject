namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: TouchQueueMessageProcessorSchema

	/// <exclude/>
	public class TouchQueueMessageProcessorSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public TouchQueueMessageProcessorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public TouchQueueMessageProcessorSchema(TouchQueueMessageProcessorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("df156054-a09a-4b76-826d-896d4920eed5");
			Name = "TouchQueueMessageProcessor";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("d23d224d-d671-416d-91d0-80132a374d7a");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,3,157,86,75,111,218,64,16,62,19,41,255,97,68,47,206,5,238,225,17,165,8,85,145,146,52,85,211,115,180,152,193,172,186,222,165,187,107,90,26,241,223,59,251,176,193,6,3,41,7,236,157,157,151,191,111,102,118,37,203,209,172,88,138,240,138,90,51,163,22,182,55,81,114,193,179,66,51,203,149,188,190,122,191,190,234,20,134,203,12,190,111,140,197,156,246,133,192,212,109,154,222,23,148,168,121,58,168,116,246,221,228,185,146,199,119,52,238,228,153,80,51,38,110,111,131,126,239,81,101,25,137,105,159,52,62,105,204,40,14,76,4,51,230,22,94,85,145,46,191,21,88,224,19,26,195,50,124,209,42,165,55,165,189,118,191,223,135,161,41,242,156,233,205,56,174,163,6,26,96,66,64,30,204,12,44,180,202,73,23,17,82,141,139,81,119,231,185,219,31,247,74,95,253,61,103,171,98,38,120,10,169,203,228,100,34,157,119,159,204,46,119,194,201,234,34,181,74,211,39,188,120,55,65,163,153,175,23,60,72,110,57,19,252,47,101,41,241,55,112,178,102,146,8,82,11,176,75,12,9,244,42,243,126,211,126,184,98,154,229,32,137,216,81,183,48,168,41,190,12,116,117,199,63,104,13,105,37,168,156,247,134,125,111,230,189,196,47,109,255,198,228,71,205,45,212,163,220,128,171,152,78,167,161,52,106,168,185,2,232,108,35,84,40,231,1,173,58,116,20,113,133,218,114,116,192,105,190,102,22,131,194,42,44,224,97,42,139,28,53,155,9,28,126,102,6,219,115,30,195,91,222,16,153,201,146,113,57,248,127,143,77,73,112,8,35,143,98,167,37,30,220,221,65,210,182,55,130,71,197,230,168,169,175,236,110,47,185,185,25,124,0,168,115,21,118,47,15,138,106,175,19,234,180,81,55,156,172,184,88,43,107,174,109,193,4,52,56,111,44,223,33,67,59,0,227,254,182,39,18,116,35,128,48,104,137,88,18,69,90,240,38,188,234,96,47,21,47,15,30,98,33,82,80,226,164,212,13,248,199,119,135,119,246,196,36,203,2,230,193,46,9,227,224,69,113,105,77,215,131,79,110,76,221,205,8,214,76,20,184,95,198,151,160,125,116,230,196,66,122,86,150,47,56,234,10,116,176,10,164,19,110,128,205,84,97,97,21,106,130,230,227,25,116,90,125,195,155,173,182,74,217,224,84,215,87,134,213,75,29,213,67,119,1,225,35,242,145,31,104,173,17,26,99,165,137,251,81,135,151,113,240,112,33,1,85,203,133,46,116,60,16,3,238,75,221,225,193,214,140,11,55,24,202,99,164,164,131,90,244,163,116,52,34,185,170,114,207,192,132,86,150,32,192,121,213,86,103,205,227,163,89,239,94,24,235,221,191,183,48,208,112,119,134,136,202,215,1,248,109,227,233,9,237,82,205,219,134,248,90,241,57,81,100,81,75,38,98,42,201,65,142,37,232,229,241,178,160,75,4,75,151,144,172,153,222,17,65,189,214,50,150,75,187,14,95,64,82,233,247,38,76,70,197,104,150,148,113,42,131,206,78,187,204,174,212,25,68,13,141,182,208,50,174,182,254,177,253,16,46,231,102,246,171,166,217,238,138,49,230,2,190,27,224,151,3,168,68,230,210,75,65,84,239,142,91,218,98,186,70,105,247,161,119,87,162,253,11,130,247,136,127,82,92,249,177,30,172,238,117,70,7,167,180,207,133,16,95,245,52,95,217,205,180,84,113,161,32,165,211,212,71,242,142,200,166,145,14,53,27,167,43,15,153,83,176,202,251,177,83,198,23,204,197,133,82,162,51,89,98,250,115,63,203,164,10,29,121,108,214,96,141,229,227,84,6,105,93,232,101,244,251,7,234,130,7,248,92,11,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("df156054-a09a-4b76-826d-896d4920eed5"));
		}

		#endregion

	}

	#endregion

}

