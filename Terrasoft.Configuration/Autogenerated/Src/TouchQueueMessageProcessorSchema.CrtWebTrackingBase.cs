namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: TouchQueueMessageProcessorSchema

	/// <exclude/>
	public class TouchQueueMessageProcessorSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public TouchQueueMessageProcessorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public TouchQueueMessageProcessorSchema(TouchQueueMessageProcessorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("df156054-a09a-4b76-826d-896d4920eed5");
			Name = "TouchQueueMessageProcessor";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("d23d224d-d671-416d-91d0-80132a374d7a");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,3,157,86,75,111,218,64,16,62,19,41,255,97,68,47,206,5,238,225,17,165,8,85,145,146,52,85,211,115,180,152,193,172,186,222,165,187,107,90,26,241,223,59,251,176,49,6,3,41,7,236,157,157,151,191,111,102,118,37,203,209,172,88,138,240,138,90,51,163,22,182,55,81,114,193,179,66,51,203,149,188,190,122,191,190,234,20,134,203,12,190,111,140,197,156,246,133,192,212,109,154,222,23,148,168,121,58,168,116,234,110,242,92,201,227,59,26,119,242,76,168,25,19,183,183,65,191,247,168,178,140,196,180,79,26,159,52,102,20,7,38,130,25,115,11,175,170,72,151,223,10,44,240,9,141,97,25,190,104,149,210,155,210,94,187,223,239,195,208,20,121,206,244,102,28,215,81,3,13,48,33,32,15,102,6,22,90,229,164,139,8,169,198,197,168,187,243,220,237,143,123,165,175,126,205,217,170,152,9,158,66,234,50,57,153,72,231,221,39,179,203,157,112,178,186,72,173,210,244,9,47,222,77,208,104,230,235,5,15,146,91,206,4,255,75,89,74,252,13,156,172,153,36,130,212,2,236,18,67,2,189,202,188,223,180,31,174,152,102,57,72,34,118,212,45,12,106,138,47,3,93,221,241,15,90,67,90,9,42,231,189,97,223,155,121,47,241,75,219,191,49,249,177,231,22,246,163,220,128,171,152,78,167,161,52,106,168,185,2,232,108,35,84,40,231,1,173,125,232,40,226,10,181,229,232,128,211,124,205,44,6,133,85,88,192,195,84,22,57,106,54,19,56,252,204,12,182,231,60,134,183,188,33,50,147,37,227,114,240,255,30,155,146,224,16,70,30,197,78,75,60,184,187,131,164,109,111,4,143,138,205,81,83,95,217,221,94,114,115,51,248,0,80,231,42,236,94,30,20,85,173,19,246,105,163,110,56,89,113,177,86,214,92,219,130,9,104,112,222,88,190,67,134,118,0,198,253,109,79,36,232,70,0,97,208,18,177,36,138,180,224,77,120,213,65,45,21,47,15,30,98,33,82,80,226,164,212,13,248,199,119,135,119,246,196,36,203,2,230,193,46,9,227,224,69,113,105,77,215,131,79,110,204,190,155,17,172,153,40,176,94,198,151,160,125,116,230,196,66,122,86,150,47,56,234,10,116,176,10,164,19,110,128,205,84,97,97,21,106,130,230,227,25,116,90,125,195,155,173,182,74,217,224,84,215,87,134,213,203,62,170,135,238,2,194,71,228,35,63,208,90,35,52,198,74,19,247,163,14,47,227,224,225,66,2,170,150,11,93,232,120,32,6,220,151,186,195,131,173,25,23,110,48,148,199,72,73,7,181,232,71,233,104,68,114,85,229,158,129,9,173,44,65,128,243,170,173,206,154,199,71,179,222,189,48,214,187,127,111,97,160,225,238,12,17,149,175,3,240,219,198,211,19,218,165,154,183,13,241,181,226,115,162,200,162,150,76,196,84,146,131,28,75,208,203,227,101,65,151,8,150,46,33,89,51,189,35,130,122,173,101,44,151,118,29,190,128,164,210,239,77,152,140,138,209,44,41,227,84,6,157,157,118,153,93,169,51,136,26,26,109,161,101,92,109,253,99,251,33,92,206,205,236,87,77,179,221,21,99,204,5,124,55,192,47,7,80,137,204,165,151,130,168,222,29,183,180,197,116,141,210,214,161,119,87,162,250,5,193,123,196,63,41,174,252,88,15,86,247,58,163,131,83,218,231,66,136,175,122,154,175,236,102,90,170,184,80,144,210,105,234,35,121,71,100,211,72,135,154,141,211,149,135,204,41,88,229,253,216,41,227,11,230,226,66,41,209,153,44,49,253,89,207,50,169,66,71,30,155,53,184,199,242,113,42,131,116,95,232,101,181,223,63,88,42,113,171,100,11,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("df156054-a09a-4b76-826d-896d4920eed5"));
		}

		#endregion

	}

	#endregion

}

