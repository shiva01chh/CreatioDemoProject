namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: GlobalSearchConfigurationHealthCheckerSchema

	/// <exclude/>
	public class GlobalSearchConfigurationHealthCheckerSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public GlobalSearchConfigurationHealthCheckerSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public GlobalSearchConfigurationHealthCheckerSchema(GlobalSearchConfigurationHealthCheckerSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("ded389d2-4001-4264-a397-4c3ba72de51d");
			Name = "GlobalSearchConfigurationHealthChecker";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("30c103fe-34c6-441e-895c-acadc354f737");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,3,205,84,77,111,211,64,16,61,59,82,254,195,16,56,56,82,228,72,28,91,64,106,3,45,145,10,84,56,45,7,132,208,198,30,59,43,214,187,102,119,29,26,69,249,239,204,250,35,177,163,164,74,69,15,228,16,201,243,241,222,206,188,183,43,89,134,38,103,17,194,12,181,102,70,37,54,152,40,153,240,180,208,204,114,37,131,107,161,230,76,132,200,116,180,232,247,214,253,158,87,24,46,83,8,87,198,98,22,204,240,193,158,111,131,109,144,44,83,242,112,70,227,177,120,151,251,104,213,21,139,172,210,28,13,85,80,205,75,141,41,149,195,84,90,212,9,13,115,6,211,246,177,59,160,31,145,9,187,152,44,48,250,133,186,108,207,139,185,224,17,240,166,251,244,102,111,93,2,108,15,240,9,237,66,197,230,12,110,75,200,42,57,30,143,225,141,41,178,140,233,213,187,38,112,141,22,42,22,168,104,32,106,243,64,174,213,92,96,102,128,25,112,27,16,72,5,89,206,5,198,96,172,166,72,176,197,30,183,193,171,164,195,159,212,245,157,1,110,107,92,255,206,160,166,140,196,168,228,43,58,159,195,243,122,46,148,113,53,90,249,189,169,182,221,13,54,179,79,4,51,52,249,19,246,254,253,61,38,172,16,246,146,203,152,206,236,219,85,142,42,241,79,220,254,112,248,99,167,93,228,200,79,228,126,130,57,142,235,171,249,146,89,172,178,121,245,65,186,16,70,4,75,197,99,40,33,190,226,239,130,107,140,233,170,132,104,45,205,24,82,9,62,190,251,81,173,47,233,29,227,200,225,123,94,88,70,46,11,46,98,212,64,119,65,233,27,149,166,180,4,88,151,21,75,166,97,201,68,129,240,22,252,170,127,184,99,53,1,217,225,222,165,253,125,46,71,226,212,38,12,158,128,95,98,4,83,243,185,16,226,139,254,182,224,22,67,247,58,248,195,134,201,107,177,7,23,121,78,102,184,225,18,253,87,131,102,90,48,229,203,0,166,38,135,181,35,217,0,55,32,149,133,132,11,103,98,46,131,65,77,188,113,255,155,131,142,251,159,110,86,109,181,231,185,96,45,221,232,1,54,44,69,67,210,73,252,3,29,173,253,122,69,143,218,105,95,211,65,219,222,119,90,12,70,91,142,127,134,171,102,13,81,47,121,132,207,140,61,149,49,62,80,233,69,206,15,34,59,131,190,232,34,56,99,79,205,21,50,91,104,252,32,25,173,62,246,59,160,63,239,95,15,118,230,109,16,219,206,29,212,237,176,215,214,24,22,43,216,174,93,61,141,212,35,183,71,12,102,170,18,174,86,236,176,157,15,61,160,27,232,247,218,191,191,112,252,153,124,146,7,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("ded389d2-4001-4264-a397-4c3ba72de51d"));
		}

		#endregion

	}

	#endregion

}

