namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: FloatColumnProcessorSchema

	/// <exclude/>
	public class FloatColumnProcessorSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public FloatColumnProcessorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public FloatColumnProcessorSchema(FloatColumnProcessorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("30a1a7ef-6525-497b-a8c9-487797a70be1");
			Name = "FloatColumnProcessor";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("bdeb1980-c322-4103-af7f-58bfe7162080");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,3,189,84,77,111,26,49,16,61,19,41,255,97,74,47,32,33,115,39,64,213,146,18,113,104,132,2,233,37,202,193,236,206,18,75,94,123,229,15,20,138,242,223,59,182,151,132,221,208,92,90,117,15,176,158,125,243,102,230,205,140,21,47,209,86,60,67,88,163,49,220,234,194,177,153,86,133,216,122,195,157,208,138,205,133,196,69,89,105,227,46,47,14,151,23,29,111,133,218,194,106,111,29,150,87,173,51,187,145,122,195,165,248,21,93,223,125,93,227,179,99,119,184,245,146,155,239,207,149,65,107,9,102,223,112,167,57,24,252,147,157,205,121,230,180,17,24,60,9,243,217,224,150,120,96,38,185,181,35,152,75,205,221,76,75,95,170,165,209,25,5,209,38,226,134,195,33,140,133,122,66,35,92,174,51,200,12,22,147,238,173,86,75,52,86,80,134,170,237,118,88,223,161,245,210,189,116,135,211,35,129,245,101,201,205,254,120,134,175,10,132,178,142,43,210,80,23,224,158,132,133,44,100,2,244,66,37,86,84,161,216,72,132,66,27,168,18,115,168,41,166,9,89,12,8,59,46,61,90,118,140,49,60,9,242,112,141,5,167,28,190,9,149,147,95,207,237,43,212,69,111,209,74,181,63,128,91,234,37,76,64,209,31,1,206,201,208,239,63,18,99,229,55,82,100,117,146,231,96,48,130,143,84,25,231,152,137,146,203,47,211,1,180,211,32,250,67,20,251,173,43,84,191,51,62,116,140,154,179,140,177,19,226,175,251,241,174,33,169,35,244,204,12,114,135,182,217,25,18,142,208,136,117,160,115,149,19,47,123,37,30,182,153,199,21,55,188,140,2,79,186,222,162,161,218,20,102,97,214,187,211,123,58,83,59,143,6,54,30,70,116,116,174,21,63,23,177,119,223,224,129,38,109,63,120,119,70,176,225,22,123,173,79,112,128,151,90,106,84,121,82,187,41,61,5,169,208,56,90,148,81,120,119,228,136,249,191,210,190,58,18,130,222,209,122,138,28,225,198,139,28,174,185,227,63,195,56,175,73,239,251,69,14,147,105,211,198,162,12,109,216,213,199,165,252,64,247,164,243,255,84,199,113,190,195,236,146,205,197,60,123,233,18,76,108,209,82,47,111,124,167,110,196,86,133,70,177,134,219,41,232,42,98,102,20,221,27,92,168,66,67,230,141,9,57,38,19,109,111,115,28,216,44,125,15,86,86,131,18,9,237,84,184,69,178,100,91,85,148,114,33,178,148,215,4,232,146,197,103,186,106,43,73,87,251,105,10,44,254,14,160,251,48,96,143,221,65,164,234,52,147,96,183,190,220,160,153,107,83,114,87,31,174,147,34,43,12,51,77,155,92,87,34,10,232,125,202,53,77,55,178,181,217,47,185,161,49,61,151,210,0,180,119,144,144,233,178,35,250,21,223,97,63,77,120,199,32,249,40,80,94,202,68,189,227,113,155,130,142,152,31,203,234,213,157,233,159,82,36,124,77,208,116,137,159,206,47,73,178,54,141,209,22,158,223,251,128,131,235,22,7,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("30a1a7ef-6525-497b-a8c9-487797a70be1"));
		}

		#endregion

	}

	#endregion

}

