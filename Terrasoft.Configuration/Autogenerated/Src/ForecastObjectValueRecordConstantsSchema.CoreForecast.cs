namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: ForecastObjectValueRecordConstantsSchema

	/// <exclude/>
	public class ForecastObjectValueRecordConstantsSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ForecastObjectValueRecordConstantsSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ForecastObjectValueRecordConstantsSchema(ForecastObjectValueRecordConstantsSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("1ddbea9e-ae56-27a5-483a-144ecec56549");
			Name = "ForecastObjectValueRecordConstants";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("e0b9d996-6f7e-4520-a678-da960c79be39");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,3,165,86,193,114,218,48,16,61,39,51,249,135,157,244,210,94,224,94,210,206,116,160,73,115,104,147,1,166,151,76,14,66,90,131,58,178,228,74,50,25,154,201,191,87,150,144,109,192,224,216,112,97,180,222,247,180,111,45,191,21,72,146,162,201,8,69,152,163,214,196,168,196,14,198,74,38,124,153,107,98,185,146,87,151,175,87,151,23,185,225,114,9,179,141,177,152,142,246,214,131,105,46,45,79,113,48,67,205,137,224,255,60,206,101,185,188,15,26,151,110,1,99,65,140,249,12,183,74,35,37,198,254,224,198,42,189,153,170,23,183,151,177,68,90,227,211,135,195,33,220,152,60,77,137,222,124,221,174,31,181,90,115,134,6,146,45,24,212,226,15,82,11,107,34,114,4,23,83,154,1,141,60,131,72,51,172,241,100,249,66,112,10,46,195,186,63,90,20,83,214,242,224,217,126,23,100,83,207,85,43,233,162,208,30,209,126,11,199,161,11,233,83,76,190,59,213,118,51,86,34,79,229,47,215,70,248,2,215,101,248,158,93,143,142,97,31,93,159,20,219,5,134,216,41,84,200,223,69,133,213,41,212,109,46,105,133,249,38,56,49,5,176,10,31,135,70,33,187,91,182,203,155,160,64,139,236,97,175,214,50,124,2,201,77,38,200,198,191,139,166,93,235,207,143,179,52,192,91,16,51,73,50,179,82,118,23,20,163,39,219,91,29,162,218,9,154,209,21,166,36,242,52,231,180,115,110,63,146,247,80,23,169,19,205,133,96,234,229,68,127,99,122,84,86,35,171,179,197,199,253,100,151,103,44,81,107,221,78,49,70,33,194,219,221,135,211,240,198,222,130,145,160,100,193,75,154,124,229,224,27,110,119,147,76,171,12,181,229,193,88,26,61,133,17,75,26,237,228,105,226,158,56,155,176,154,80,251,92,249,75,48,150,134,98,10,31,41,26,177,95,145,15,220,161,53,224,74,48,197,191,93,33,228,146,255,117,85,184,50,93,95,18,142,122,80,98,135,251,224,27,95,113,185,156,183,192,171,236,109,201,119,57,103,112,207,224,21,150,104,71,69,13,35,120,235,82,44,11,223,100,232,92,183,66,143,65,171,76,223,232,159,152,46,80,127,140,103,158,213,77,224,211,115,77,75,131,139,244,215,213,67,79,55,29,235,67,1,12,41,79,137,128,51,75,207,252,44,233,86,123,192,180,29,154,38,29,89,156,92,59,82,252,185,138,67,173,191,20,234,29,185,155,148,128,233,35,133,198,113,122,40,37,78,218,254,82,52,38,168,81,186,155,22,122,187,235,253,125,191,143,232,180,82,93,187,167,28,138,173,221,98,250,235,61,83,101,127,109,120,92,216,249,170,88,184,197,128,155,61,110,60,32,16,201,192,95,126,187,57,95,59,203,129,83,59,165,56,119,57,213,253,106,95,69,195,168,244,145,226,247,31,167,169,162,14,233,11,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("1ddbea9e-ae56-27a5-483a-144ecec56549"));
		}

		#endregion

	}

	#endregion

}

