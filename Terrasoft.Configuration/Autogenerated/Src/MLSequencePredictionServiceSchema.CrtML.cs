namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: MLSequencePredictionServiceSchema

	/// <exclude/>
	public class MLSequencePredictionServiceSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public MLSequencePredictionServiceSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public MLSequencePredictionServiceSchema(MLSequencePredictionServiceSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("7853d612-093b-4c63-9155-ee9f44019750");
			Name = "MLSequencePredictionService";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("8fc1aed6-9801-4726-afd3-e3dd2c2dc4ea");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,3,205,86,219,110,219,56,16,125,118,129,254,3,161,46,80,25,48,228,247,141,45,96,155,27,92,196,27,163,78,209,135,160,40,104,105,108,179,149,72,45,73,57,113,141,252,251,14,47,82,100,73,78,218,183,6,136,109,14,15,231,114,56,23,18,78,115,80,5,77,128,220,129,148,84,137,181,142,206,5,95,179,77,41,169,102,130,71,243,155,183,111,14,111,223,12,74,197,248,134,44,247,74,67,126,214,90,227,145,44,131,196,224,85,116,13,28,36,75,58,152,79,37,215,44,135,104,137,187,52,99,63,173,250,14,10,119,119,44,129,185,72,33,123,113,51,250,2,171,103,192,179,247,243,155,104,198,53,200,53,6,165,250,0,231,66,66,116,69,19,45,36,179,8,196,188,147,176,65,111,200,121,70,149,250,155,204,111,22,18,82,102,32,222,164,69,141,199,99,50,81,101,158,83,185,143,253,26,189,32,57,232,173,72,21,89,11,73,114,154,108,25,7,146,1,149,220,24,46,156,38,67,101,165,98,220,208,81,148,171,140,37,164,160,82,35,43,36,49,14,244,218,31,28,172,15,109,87,151,240,95,9,60,129,69,109,230,19,168,50,211,14,220,246,216,10,16,80,224,69,129,245,87,249,243,13,63,81,102,109,250,184,162,90,81,211,239,193,253,5,213,20,83,69,75,164,242,171,145,248,80,92,8,167,253,26,84,145,60,135,130,222,104,89,154,112,49,162,133,85,227,33,94,231,41,109,225,144,28,200,147,199,118,130,181,146,25,103,218,230,27,40,66,9,135,7,194,208,26,53,33,139,53,209,91,192,51,0,36,145,176,158,6,167,236,4,227,216,197,21,61,91,26,119,76,77,240,22,105,78,76,77,77,3,120,100,250,28,19,53,136,239,208,134,89,145,4,151,209,100,108,81,241,47,133,231,5,151,88,57,122,127,233,53,146,74,245,144,76,99,82,75,167,181,252,236,143,36,196,39,24,164,94,131,229,165,22,18,105,165,191,71,79,119,227,182,212,69,169,73,203,150,33,202,42,28,180,85,32,107,45,108,69,222,59,224,169,203,207,86,182,46,164,40,0,171,21,218,185,218,79,247,53,104,69,108,161,225,183,238,11,249,69,6,119,52,43,161,151,42,133,92,185,93,139,182,245,56,135,124,5,50,252,23,9,199,200,2,117,234,246,134,95,95,230,215,211,216,97,235,64,54,160,207,76,44,103,175,148,93,39,236,186,2,170,44,235,233,50,191,192,66,179,144,94,137,190,174,192,227,104,251,107,170,254,113,20,34,170,233,133,71,183,63,78,229,137,167,165,45,238,237,196,11,28,83,66,230,170,175,11,143,8,179,60,73,32,212,252,239,40,203,232,42,195,95,184,189,67,218,204,16,180,45,124,131,75,238,214,159,103,167,218,117,167,28,45,126,150,98,25,74,138,3,43,245,10,89,122,84,130,157,99,41,242,28,196,85,198,88,251,141,9,215,57,42,65,151,146,171,248,2,52,250,143,86,76,237,216,201,223,236,50,189,28,155,22,67,121,218,200,251,138,37,52,83,233,181,147,232,182,210,121,52,142,238,113,52,207,248,78,252,128,112,110,83,204,228,196,226,118,121,23,140,200,7,145,238,151,122,159,153,60,65,216,28,148,162,27,168,165,209,23,73,139,2,210,17,206,74,52,169,244,21,222,18,213,71,96,39,138,62,42,188,42,155,8,213,88,125,25,235,114,241,222,249,143,47,13,7,88,24,214,64,55,146,87,54,11,245,149,62,88,229,104,181,31,94,151,204,223,231,12,99,184,112,88,204,132,9,142,89,124,147,140,136,88,125,199,231,90,76,204,109,226,8,181,254,159,236,2,178,234,139,8,210,114,239,225,131,29,173,175,30,147,96,234,30,36,238,93,181,199,71,160,158,204,26,207,152,201,41,237,113,28,58,117,131,249,141,125,7,168,168,11,197,150,139,153,159,223,237,11,24,217,137,213,120,49,252,35,55,101,14,92,135,65,137,29,5,55,184,123,136,226,45,127,62,18,12,135,46,132,129,108,117,126,33,35,111,42,172,57,179,196,56,252,19,73,168,78,182,36,188,124,76,160,176,169,11,143,21,105,3,199,40,54,49,123,143,168,244,175,224,202,101,186,22,4,76,135,162,26,122,95,89,15,76,111,125,209,189,63,120,195,79,239,3,239,228,183,76,108,162,75,41,133,12,189,238,145,49,235,119,245,86,138,7,239,158,253,116,249,100,185,57,57,45,93,220,78,133,235,82,238,243,184,85,89,89,243,239,127,227,41,216,210,36,12,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("7853d612-093b-4c63-9155-ee9f44019750"));
		}

		#endregion

	}

	#endregion

}

