namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: MLBatchScorerSchema

	/// <exclude/>
	public class MLBatchScorerSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public MLBatchScorerSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public MLBatchScorerSchema(MLBatchScorerSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("94a1827a-9241-4908-b110-6cc1dd10cabd");
			Name = "MLBatchScorer";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("11899473-4fd2-4242-bdeb-3205232c82be");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,3,141,84,193,110,219,48,12,61,167,64,255,129,200,46,206,80,216,221,118,91,211,28,218,161,67,128,100,11,214,116,151,97,7,197,166,27,13,182,100,80,114,134,172,232,191,143,146,156,196,202,178,162,62,89,52,223,123,228,35,101,37,106,52,141,200,17,150,72,36,140,46,109,122,171,85,41,31,91,18,86,106,149,206,103,231,103,79,231,103,131,214,72,245,8,247,91,99,177,190,218,159,111,53,225,225,212,231,32,76,239,68,110,53,73,52,167,50,230,179,116,170,44,82,201,226,46,129,83,222,16,62,178,36,220,86,194,152,143,48,159,221,8,155,175,239,115,230,34,159,144,101,25,140,77,91,215,130,182,147,238,236,63,27,64,101,165,101,41,8,58,13,97,33,115,43,55,8,181,200,215,82,33,84,40,72,185,111,181,46,176,74,119,116,89,143,239,199,39,44,69,91,217,27,169,10,206,76,236,182,65,93,38,211,174,146,69,32,213,52,186,128,47,108,28,92,115,141,236,150,177,38,117,101,48,100,65,122,85,97,189,100,224,232,39,51,54,237,170,146,57,228,174,163,184,33,216,55,184,167,29,119,36,95,91,219,180,214,21,244,228,219,62,24,227,180,168,117,185,236,207,194,115,135,140,99,103,124,96,170,216,18,81,201,63,108,139,0,133,191,65,50,94,40,158,182,46,193,174,145,33,136,144,19,150,215,195,168,184,97,54,9,53,167,123,242,236,152,125,220,8,18,53,40,54,226,122,216,26,36,174,78,97,238,150,102,56,89,50,185,139,65,190,15,166,227,204,35,60,65,231,75,36,154,60,68,36,16,115,142,216,176,149,48,152,28,135,221,114,14,158,59,163,80,21,193,171,216,184,57,218,181,46,156,103,164,45,3,177,120,193,182,59,77,181,176,198,27,196,171,197,251,0,27,81,181,8,165,38,48,98,195,19,122,173,45,166,63,208,224,138,167,138,188,240,40,66,219,146,50,71,69,112,161,29,224,32,216,207,108,118,237,128,222,240,205,146,5,79,118,245,139,35,29,254,187,195,242,235,189,175,58,137,246,11,162,226,58,31,7,129,221,109,26,19,218,116,169,249,146,126,120,159,68,185,126,217,17,222,194,187,203,203,209,85,207,254,147,118,178,54,6,51,119,151,146,7,18,124,125,173,141,254,198,134,223,82,48,209,7,220,110,113,228,95,47,251,80,255,95,216,78,139,128,11,39,96,159,248,165,148,72,47,131,189,245,195,201,226,184,238,19,67,60,49,137,141,150,133,239,254,128,255,230,225,201,124,54,63,116,4,189,238,46,224,115,203,160,93,209,23,126,36,131,120,108,94,123,55,174,3,181,19,162,52,150,75,122,212,41,211,245,165,82,95,194,180,251,33,60,184,175,123,217,78,227,234,255,55,43,68,227,160,143,241,243,23,184,207,77,5,84,6,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("94a1827a-9241-4908-b110-6cc1dd10cabd"));
		}

		#endregion

	}

	#endregion

}

