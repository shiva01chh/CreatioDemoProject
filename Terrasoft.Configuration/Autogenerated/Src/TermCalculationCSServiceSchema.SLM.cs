namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: TermCalculationCSServiceSchema

	/// <exclude/>
	public class TermCalculationCSServiceSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public TermCalculationCSServiceSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public TermCalculationCSServiceSchema(TermCalculationCSServiceSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("261d9b64-6c4f-428b-96aa-18536ce05a5c");
			Name = "TermCalculationCSService";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("50529f8b-8504-4b8d-9a81-5bda32bd1be4");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,3,221,87,77,111,227,54,16,61,43,64,254,3,235,189,200,128,33,223,119,157,0,94,21,91,184,104,186,134,229,98,129,6,61,208,210,216,81,87,34,85,146,114,97,20,249,239,157,33,169,207,216,206,110,209,83,114,136,205,209,240,205,7,223,60,202,130,151,160,43,158,2,219,130,82,92,203,189,137,98,41,246,249,161,86,220,228,82,68,104,47,99,94,164,117,97,215,9,168,99,158,194,237,205,63,183,55,65,173,115,113,96,201,73,27,40,63,140,214,145,247,124,144,25,20,87,31,70,203,212,228,71,139,126,221,239,11,236,58,135,126,190,10,162,79,60,53,82,229,160,207,121,224,70,244,42,75,27,0,159,191,83,112,192,104,44,46,184,214,239,217,168,196,56,241,81,217,123,246,145,107,104,75,14,230,243,57,91,232,186,44,185,58,221,251,181,197,96,114,207,180,223,148,118,72,76,167,79,144,213,5,100,44,227,6,24,23,25,51,121,9,108,199,11,46,82,208,13,230,188,7,250,232,227,225,49,24,133,85,253,65,182,165,174,126,5,131,53,84,8,188,203,139,220,156,54,240,87,157,43,40,65,24,29,246,23,212,44,118,199,94,217,66,94,145,55,100,83,10,82,213,187,34,79,89,106,11,250,230,158,16,15,218,134,62,128,121,146,25,182,116,109,177,232,209,184,103,174,105,178,198,20,152,2,172,143,246,217,166,80,119,56,211,178,168,59,155,145,108,226,99,173,144,15,147,89,187,92,227,86,90,174,85,142,231,110,78,147,168,141,54,31,135,91,84,92,241,146,9,36,251,221,68,97,205,160,205,228,126,227,190,176,189,84,253,131,2,158,21,185,0,29,45,230,118,91,135,162,192,212,74,232,251,165,96,114,247,39,164,134,153,39,110,88,138,7,197,115,161,113,5,103,74,26,20,180,152,55,32,132,250,248,185,2,55,102,253,195,14,30,145,175,43,113,148,95,33,116,13,197,211,156,172,63,39,91,172,247,163,204,78,137,57,21,116,194,232,246,0,90,243,3,180,214,232,139,226,85,5,217,140,249,234,62,73,85,98,142,125,103,103,138,126,214,82,204,40,92,176,65,9,144,66,195,117,95,203,145,134,36,254,16,136,37,205,110,246,19,152,158,57,28,184,184,78,251,214,79,153,37,77,112,228,138,153,30,207,240,28,238,220,60,185,105,62,69,8,185,216,14,60,226,90,27,89,130,242,232,247,161,69,10,2,1,127,35,171,132,54,170,166,173,75,117,168,137,230,225,228,55,156,75,124,32,192,30,11,118,112,104,152,206,94,3,208,29,253,86,25,238,247,69,68,73,223,254,58,76,229,121,58,192,88,183,198,169,219,63,253,96,63,127,68,181,216,18,129,104,174,16,203,114,196,26,238,88,243,44,90,115,165,33,108,160,54,35,207,151,72,142,152,30,101,216,247,168,249,74,120,67,156,25,115,153,141,5,129,106,228,56,196,24,184,3,142,145,235,165,208,238,6,25,103,208,12,194,255,158,65,210,3,62,151,129,27,57,70,71,115,142,183,142,140,193,102,216,160,126,191,252,225,38,195,2,250,245,88,135,103,27,238,153,254,189,166,124,78,42,74,148,13,186,169,220,157,0,40,68,96,159,84,120,59,8,127,105,124,183,172,45,27,118,89,97,235,2,101,160,232,154,162,88,151,165,205,83,165,73,12,115,205,11,139,97,184,58,128,113,25,189,21,17,43,36,150,136,18,179,177,245,234,109,158,126,165,155,180,91,92,209,45,215,35,235,133,177,136,90,132,22,122,198,145,7,190,7,128,200,184,66,64,108,254,64,227,46,189,107,197,23,182,140,68,47,138,145,156,6,86,150,255,248,162,48,124,26,14,5,174,19,155,24,239,109,20,26,151,97,190,15,47,38,248,3,22,84,23,69,83,110,127,130,107,149,66,187,188,168,69,201,192,207,71,12,94,236,166,143,223,165,192,66,246,146,58,113,4,101,200,22,14,61,199,146,29,197,181,82,168,169,100,141,26,140,70,36,2,255,226,56,192,254,69,98,173,77,26,195,147,11,233,216,166,151,90,17,57,118,160,141,240,146,138,139,23,185,53,53,175,144,45,141,34,76,35,11,239,2,62,247,53,168,23,252,251,196,162,47,9,163,193,110,21,132,166,27,173,169,107,207,127,83,143,173,133,237,244,131,251,55,215,61,202,53,171,120,173,175,136,199,186,47,91,111,69,36,90,190,34,21,232,251,146,58,177,166,70,124,171,84,100,131,93,24,244,10,157,49,136,95,54,113,223,166,164,188,232,201,181,9,108,238,221,81,251,187,55,159,238,24,46,204,227,153,73,28,102,208,13,227,59,76,195,253,154,193,21,89,6,134,219,155,103,250,5,137,127,255,2,151,83,235,220,58,15,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("261d9b64-6c4f-428b-96aa-18536ce05a5c"));
		}

		#endregion

	}

	#endregion

}

