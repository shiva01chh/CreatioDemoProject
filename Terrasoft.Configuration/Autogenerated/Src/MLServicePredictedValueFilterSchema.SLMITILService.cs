namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: MLServicePredictedValueFilterSchema

	/// <exclude/>
	public class MLServicePredictedValueFilterSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public MLServicePredictedValueFilterSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public MLServicePredictedValueFilterSchema(MLServicePredictedValueFilterSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("5d952c78-4f98-48e7-8948-9c86f90db786");
			Name = "MLServicePredictedValueFilter";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("e45998c9-62eb-4d7e-9232-63ecc763f5be");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,3,141,86,77,111,219,70,16,61,43,64,254,195,152,45,16,10,85,169,230,26,203,4,108,71,118,21,216,177,80,57,201,161,232,97,69,14,165,5,168,93,117,119,105,69,21,244,223,59,251,65,90,100,44,57,62,216,203,225,204,155,55,111,223,46,45,216,10,245,154,101,8,143,168,20,211,178,48,201,181,20,5,95,84,138,25,46,69,114,127,247,246,205,238,237,155,94,165,185,88,192,108,171,13,174,206,155,231,195,42,133,199,226,201,199,171,163,175,198,194,112,195,81,31,77,184,97,153,145,234,72,198,253,93,50,17,6,85,65,35,216,4,74,249,69,225,130,136,195,117,201,180,254,0,247,119,51,84,79,60,195,169,194,156,103,6,243,175,172,172,240,134,151,84,230,10,134,195,33,140,116,181,90,49,181,77,195,243,159,76,228,37,42,40,164,130,80,15,5,199,50,135,181,135,177,29,40,135,130,22,135,72,37,53,210,240,0,234,239,135,39,162,202,115,252,135,30,214,213,188,228,25,100,150,215,105,90,150,245,21,211,71,40,247,118,142,246,243,160,82,104,163,42,171,18,205,59,117,93,124,70,119,50,23,152,8,210,155,149,252,63,212,192,64,224,6,56,213,51,65,19,202,2,204,18,169,4,17,50,133,197,69,116,146,102,52,76,253,52,73,211,108,216,237,54,90,51,197,86,32,200,103,23,81,165,81,17,91,129,78,191,40,125,164,102,54,6,89,19,76,70,67,87,225,0,130,98,39,73,196,95,90,160,208,238,209,255,0,115,18,50,238,68,193,58,186,183,15,58,162,200,189,148,109,93,239,209,44,101,254,51,146,94,179,178,196,28,54,75,20,128,214,207,219,96,22,129,152,107,48,18,230,8,26,13,204,183,181,127,40,253,201,14,241,179,210,121,88,47,153,95,183,148,250,33,63,147,101,181,18,78,167,207,20,136,82,251,187,222,96,255,50,16,56,9,163,80,87,165,241,109,187,204,127,40,84,104,42,37,116,58,202,82,242,35,142,134,89,10,191,3,47,124,62,112,242,91,89,202,13,1,52,138,12,0,75,141,148,69,53,5,163,165,45,34,228,26,234,192,5,50,28,37,152,75,89,194,131,152,81,202,186,237,136,120,236,197,247,2,13,128,142,133,189,46,58,90,12,44,104,175,231,238,7,94,240,204,221,115,127,185,65,193,207,27,252,209,35,234,241,153,245,79,242,114,187,186,79,183,65,13,83,227,244,252,56,224,38,60,119,161,125,211,160,83,12,103,23,16,5,191,79,232,174,157,228,81,23,198,138,219,69,57,187,173,120,158,60,170,237,148,41,242,187,39,144,56,212,1,200,202,208,30,40,18,252,0,246,153,221,157,92,36,223,152,18,241,175,117,99,224,148,18,182,109,119,136,181,135,13,211,32,164,113,118,166,37,55,239,252,51,179,233,60,135,219,47,147,143,81,255,252,244,220,150,108,205,102,74,247,251,36,135,139,218,214,183,104,30,183,107,204,175,159,117,25,217,252,52,174,217,249,138,186,137,31,172,164,147,77,24,241,204,173,250,246,90,243,203,206,253,208,247,196,122,137,135,143,253,159,196,221,161,241,251,126,120,157,220,40,185,106,250,77,196,65,227,168,159,92,234,56,210,235,168,206,157,16,182,250,36,185,104,10,102,134,153,74,215,153,118,241,32,92,201,128,182,214,189,179,244,147,137,30,255,91,177,210,165,208,27,27,11,144,223,150,168,176,169,104,155,161,41,11,212,167,246,16,162,189,9,91,219,75,133,86,181,168,223,76,124,41,242,14,100,45,228,171,144,62,241,24,164,99,127,73,242,62,225,41,44,107,91,74,188,162,227,139,76,16,138,223,63,163,182,181,17,221,201,230,250,171,53,146,219,120,218,81,191,181,201,248,59,102,149,193,89,198,74,166,70,92,152,52,238,67,10,127,4,163,185,35,112,88,217,152,251,53,119,183,68,123,193,222,144,75,212,226,29,69,42,122,216,181,4,217,67,4,191,133,54,189,103,120,182,80,136,43,178,51,208,127,15,60,28,143,32,79,224,187,111,157,143,67,226,225,152,0,93,75,217,18,226,241,247,12,215,238,195,134,173,243,58,86,74,42,26,233,228,183,241,229,107,139,62,1,74,110,52,96,3,189,195,253,107,71,246,229,111,165,143,182,131,46,118,248,243,63,78,1,185,73,100,10,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("5d952c78-4f98-48e7-8948-9c86f90db786"));
		}

		#endregion

	}

	#endregion

}

