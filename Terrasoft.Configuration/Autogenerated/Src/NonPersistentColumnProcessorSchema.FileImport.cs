namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: NonPersistentColumnProcessorSchema

	/// <exclude/>
	public class NonPersistentColumnProcessorSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public NonPersistentColumnProcessorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public NonPersistentColumnProcessorSchema(NonPersistentColumnProcessorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("0a6c31aa-e931-47f7-9a2a-e8f05e85d51f");
			Name = "NonPersistentColumnProcessor";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("b51eda84-5cfb-4f7f-b7eb-7f869b20e7e8");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,3,181,85,93,107,219,48,20,125,78,161,255,225,46,123,152,3,33,121,111,62,202,150,54,165,140,141,178,166,123,29,138,125,211,106,216,146,145,100,143,16,242,223,119,45,201,142,237,36,110,24,204,15,198,146,174,207,61,247,220,35,73,176,4,117,202,66,132,21,42,197,180,220,152,209,66,138,13,127,205,20,51,92,138,209,146,199,248,152,164,82,153,235,171,221,245,85,47,211,92,188,194,243,86,27,76,40,52,142,49,44,226,244,232,1,5,42,30,78,170,152,58,162,66,154,167,149,52,91,199,60,4,182,214,70,177,208,64,24,51,173,225,187,20,79,168,52,39,76,97,8,51,75,196,147,146,33,106,45,213,116,245,3,117,22,155,57,220,192,23,166,177,181,60,132,199,211,179,231,49,137,198,206,146,233,125,84,248,74,220,97,201,49,142,244,13,60,41,158,51,131,110,49,117,3,184,227,182,64,166,182,83,34,77,133,13,161,162,244,75,217,15,61,241,120,40,34,7,217,196,39,69,233,215,44,52,82,217,44,210,144,104,24,185,160,241,120,12,83,46,222,72,60,19,201,16,66,133,155,89,255,68,81,253,241,188,138,215,89,146,16,163,106,98,161,144,184,106,224,148,136,9,106,167,220,128,217,166,72,145,136,30,178,75,229,157,47,105,79,73,70,85,150,113,59,205,52,101,138,37,32,200,53,179,126,166,81,81,101,194,25,160,63,127,161,49,132,213,196,104,58,182,209,115,39,166,175,185,179,215,193,75,3,18,154,25,6,228,128,53,201,18,180,167,119,176,239,214,159,18,164,168,12,199,51,234,183,203,116,90,232,51,66,28,106,233,178,134,199,128,217,193,37,112,123,11,65,53,152,129,192,63,93,16,193,96,240,142,175,190,161,121,147,209,133,69,125,142,162,162,59,57,9,65,212,115,22,103,8,70,66,73,39,172,182,242,133,237,15,109,239,126,22,56,253,121,205,102,238,176,88,212,86,199,243,186,21,142,128,44,149,165,84,207,44,39,36,185,254,77,52,10,102,154,198,167,61,148,115,101,50,22,67,46,121,84,212,181,146,94,237,224,40,57,212,104,86,210,66,61,37,249,167,64,239,229,76,121,85,102,245,159,70,246,61,177,33,124,3,193,135,210,28,228,64,195,104,191,125,197,109,96,255,27,148,72,189,50,132,168,5,71,80,195,102,118,135,188,175,240,235,139,48,35,147,100,113,92,1,63,147,17,252,110,185,87,138,54,76,13,189,142,180,239,240,193,194,121,192,215,216,54,194,39,109,207,141,127,242,64,187,201,10,77,166,132,166,133,242,235,116,27,203,174,120,102,22,174,187,147,165,32,14,23,34,220,48,2,8,60,144,83,226,189,51,193,221,68,93,103,240,163,151,26,35,155,84,211,48,231,17,150,7,177,191,203,188,97,151,92,184,48,223,187,70,1,119,168,13,23,246,66,37,178,213,55,93,83,151,84,89,216,162,180,212,74,109,31,208,75,116,194,90,50,51,149,156,197,254,113,148,14,206,44,160,14,243,71,254,186,196,96,222,171,165,246,7,180,186,147,75,14,213,129,227,243,53,123,124,12,222,216,204,141,173,219,68,242,225,158,67,115,109,210,222,1,199,141,61,127,9,53,123,219,62,104,124,83,239,133,225,102,11,188,54,104,182,210,119,241,157,254,14,109,13,23,248,196,247,231,63,212,228,35,130,51,151,168,75,73,175,226,249,11,238,105,241,166,44,10,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("0a6c31aa-e931-47f7-9a2a-e8f05e85d51f"));
		}

		#endregion

	}

	#endregion

}

