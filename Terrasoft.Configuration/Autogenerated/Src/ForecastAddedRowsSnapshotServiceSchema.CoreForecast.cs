namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: ForecastAddedRowsSnapshotServiceSchema

	/// <exclude/>
	public class ForecastAddedRowsSnapshotServiceSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ForecastAddedRowsSnapshotServiceSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ForecastAddedRowsSnapshotServiceSchema(ForecastAddedRowsSnapshotServiceSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("ba938251-6ce7-4c11-8e9e-e53effa04ee9");
			Name = "ForecastAddedRowsSnapshotService";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("e0b9d996-6f7e-4520-a678-da960c79be39");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,3,157,86,93,107,219,48,20,125,206,96,255,225,226,189,56,16,28,216,227,218,164,244,99,109,3,219,24,109,183,151,49,138,106,95,39,98,182,20,36,57,37,148,253,247,93,125,217,113,210,164,237,242,144,196,210,185,87,87,231,30,29,89,176,26,245,146,229,8,119,168,20,211,178,52,217,185,20,37,159,55,138,25,46,69,118,41,21,230,76,155,159,31,223,191,123,122,255,110,208,104,46,230,112,187,214,6,235,163,173,103,10,173,42,204,109,156,206,174,80,160,226,249,14,230,130,25,214,13,110,46,91,215,82,60,63,163,112,223,120,118,113,182,119,234,179,48,220,112,212,123,1,151,44,55,82,121,4,97,62,40,156,83,233,112,94,49,173,63,65,220,249,105,81,96,113,35,31,245,173,96,75,189,144,230,22,213,138,231,232,98,198,227,49,28,235,166,174,153,90,79,195,115,152,135,82,42,208,108,101,23,214,33,212,141,149,33,49,40,74,154,197,36,227,141,44,191,46,176,100,77,101,206,184,40,40,60,53,235,37,202,50,157,197,146,220,206,214,91,245,12,71,240,141,218,9,19,72,92,201,247,182,230,100,248,155,242,45,155,135,138,231,144,219,141,189,184,47,248,4,103,76,99,132,17,98,11,48,130,195,133,208,130,79,142,156,150,209,75,142,85,65,148,126,87,124,197,140,103,110,176,244,15,93,178,107,174,109,59,114,86,93,115,84,76,229,139,53,45,110,245,114,131,75,169,57,77,174,225,190,60,136,238,144,71,161,4,20,133,175,162,95,18,169,92,27,213,88,1,216,194,28,65,161,46,79,214,75,52,165,63,52,42,202,34,188,224,161,233,61,14,137,197,7,98,49,221,30,126,250,123,184,174,239,74,46,81,89,217,90,186,164,161,56,44,60,164,167,53,184,66,163,193,44,176,147,211,162,101,132,254,6,74,172,198,64,181,164,100,125,157,249,148,43,86,53,56,133,187,255,200,229,67,125,55,67,173,111,236,231,97,240,6,208,154,207,96,48,71,19,254,13,20,154,70,137,215,11,2,78,78,124,224,32,125,125,204,36,132,12,156,41,120,195,88,147,183,153,227,55,109,115,154,38,225,72,39,163,152,81,224,227,166,10,79,213,188,169,81,152,52,233,75,38,25,65,95,105,195,225,240,200,229,248,235,190,53,49,50,153,190,129,134,9,184,174,185,28,47,136,241,43,154,133,44,118,149,216,53,91,174,200,82,121,129,176,146,188,176,176,28,181,190,224,101,105,79,76,250,133,106,57,238,243,20,185,153,90,53,253,180,133,232,97,232,232,107,165,144,205,4,17,98,220,10,93,146,183,237,103,227,188,111,91,184,247,112,182,66,221,29,7,219,43,235,214,157,145,203,18,10,218,38,42,20,100,153,15,104,30,17,5,144,62,26,58,50,76,20,80,217,184,22,30,173,126,215,235,253,200,146,41,86,131,32,255,158,36,49,40,153,70,203,129,26,13,43,136,181,236,120,236,144,207,7,150,188,50,168,146,233,165,251,133,188,119,145,111,70,6,139,115,61,179,59,141,235,164,177,5,113,192,118,170,221,196,8,124,98,255,130,0,126,181,216,188,8,202,206,23,152,255,137,98,254,214,84,85,106,139,163,219,43,34,162,124,219,136,219,5,226,43,226,60,46,70,251,213,247,71,133,234,250,232,27,204,165,42,102,133,126,41,174,67,198,12,109,43,38,45,31,97,194,86,5,218,125,119,115,190,88,143,8,151,100,190,192,154,209,27,82,83,11,114,209,160,156,240,60,241,9,172,177,120,244,77,31,176,117,217,12,119,19,183,90,61,199,170,10,67,193,188,250,177,217,102,212,87,38,216,156,182,75,235,210,161,50,140,22,60,91,255,152,21,169,47,167,127,205,207,132,205,77,179,97,249,25,165,84,61,249,116,74,241,52,6,175,179,167,167,85,86,160,161,38,53,114,45,69,16,83,240,116,63,27,94,99,118,119,148,217,153,144,212,215,228,233,9,1,91,172,102,254,199,249,131,69,120,211,28,193,127,150,179,235,99,206,189,153,48,58,179,47,73,45,118,127,129,135,82,108,195,125,181,135,108,205,143,246,7,221,24,125,254,1,59,146,18,253,217,11,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("ba938251-6ce7-4c11-8e9e-e53effa04ee9"));
		}

		#endregion

	}

	#endregion

}

