namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: ForecastSnapshotExecutorSchema

	/// <exclude/>
	public class ForecastSnapshotExecutorSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ForecastSnapshotExecutorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ForecastSnapshotExecutorSchema(ForecastSnapshotExecutorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("116770b7-d605-0dde-2869-eb7e844280ad");
			Name = "ForecastSnapshotExecutor";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("e0b9d996-6f7e-4520-a678-da960c79be39");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,3,133,84,223,107,219,48,16,126,118,33,255,195,225,238,193,134,96,195,30,19,39,101,116,75,201,88,97,144,118,47,99,20,197,190,184,46,182,20,36,57,91,40,249,223,119,178,252,35,17,49,245,131,145,78,223,119,254,116,247,157,129,179,10,213,158,165,8,79,40,37,83,98,167,163,123,193,119,69,94,75,166,11,193,163,149,144,152,50,165,127,125,158,220,188,79,110,188,90,21,60,135,188,20,91,86,206,102,247,162,170,8,244,67,228,57,133,231,253,249,230,168,52,86,238,158,82,151,37,166,38,175,138,30,144,163,44,210,1,115,174,64,226,88,60,90,177,84,11,89,160,34,4,97,110,37,230,148,15,238,75,166,212,12,58,185,27,206,246,234,85,232,111,255,48,173,9,223,96,227,56,134,68,213,85,197,228,113,217,238,45,0,21,236,90,38,168,150,170,205,199,223,196,54,234,152,177,67,77,20,34,43,149,128,84,226,110,225,59,58,215,223,197,182,251,186,15,177,33,237,235,109,89,164,144,26,169,163,74,97,6,231,84,162,153,178,247,247,92,21,88,102,116,209,159,178,56,48,141,205,189,188,189,221,128,210,212,180,20,36,178,76,240,242,8,107,106,12,188,148,244,90,0,45,31,25,103,57,74,42,189,54,29,67,153,140,137,88,6,225,252,60,241,218,5,182,169,224,101,119,253,192,54,199,187,69,158,89,225,157,80,161,201,0,152,193,179,66,73,78,227,214,14,238,246,29,114,212,115,80,230,117,114,169,163,98,198,226,77,1,61,202,216,174,60,137,186,150,124,84,60,220,221,89,156,23,140,66,22,214,113,214,141,71,83,210,100,76,215,50,224,248,23,232,118,74,203,218,192,191,200,188,174,144,235,192,175,47,174,237,79,157,58,132,161,109,131,119,50,239,182,16,157,19,30,81,191,138,198,10,141,173,236,161,107,241,75,143,147,155,65,236,177,29,237,30,31,187,132,100,207,36,171,192,252,29,22,174,198,229,211,43,130,137,65,218,7,163,36,110,24,215,19,52,107,212,40,149,37,15,251,11,94,59,29,7,81,100,157,226,192,177,197,165,148,41,172,191,22,205,138,180,39,84,92,26,216,41,136,237,27,29,47,207,190,18,182,109,63,48,217,79,249,58,163,14,6,15,117,145,133,3,240,183,191,234,143,253,63,182,242,142,130,133,163,193,130,204,136,69,107,190,19,193,167,62,69,255,31,49,83,41,201,183,17,12,217,103,239,131,144,147,223,54,121,196,62,209,134,29,176,139,5,3,111,10,198,86,171,162,212,141,32,250,103,7,97,56,185,153,127,168,135,102,242,99,53,167,171,3,108,163,151,193,38,118,254,252,7,238,18,81,146,86,6,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("116770b7-d605-0dde-2869-eb7e844280ad"));
		}

		#endregion

	}

	#endregion

}

