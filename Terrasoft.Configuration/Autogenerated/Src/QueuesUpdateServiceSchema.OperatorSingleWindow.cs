namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: QueuesUpdateServiceSchema

	/// <exclude/>
	public class QueuesUpdateServiceSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public QueuesUpdateServiceSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public QueuesUpdateServiceSchema(QueuesUpdateServiceSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("80fa838c-1c21-420d-a9cd-0e248d1c1ada");
			Name = "QueuesUpdateService";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("64ebcdcc-1a9c-4eb3-9403-16c8221d18f7");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,3,149,84,77,79,227,48,16,61,7,137,255,48,219,189,180,82,229,222,41,139,4,221,15,129,196,199,18,86,61,160,61,184,201,180,181,72,98,227,113,186,91,33,254,59,99,59,41,1,74,217,237,161,173,159,103,222,204,188,121,73,37,75,36,35,51,132,27,180,86,146,158,59,49,209,213,92,45,106,43,157,210,213,254,222,195,254,94,82,147,170,22,144,174,201,97,41,82,180,43,149,225,185,206,177,24,239,186,20,199,153,83,171,64,179,59,110,138,179,55,1,140,113,16,17,39,167,78,58,124,14,232,118,106,223,197,69,154,45,49,175,11,180,207,17,158,115,162,203,50,244,195,232,103,139,11,230,7,152,20,146,232,0,126,214,88,35,253,50,57,215,107,26,12,113,163,209,8,14,169,46,75,105,215,71,205,249,202,234,149,202,145,160,68,183,212,57,193,92,91,184,247,4,80,123,2,174,39,218,212,81,39,247,182,33,102,149,157,149,153,251,237,177,99,50,23,232,184,53,195,137,51,85,40,183,190,198,251,90,89,44,177,114,212,239,30,188,100,240,5,62,72,241,81,162,1,242,129,47,98,234,89,161,50,200,252,168,219,38,133,3,56,145,212,158,134,112,122,141,50,191,172,138,117,119,11,204,243,16,36,217,104,199,115,144,147,92,241,128,37,241,219,142,146,37,38,30,32,243,247,64,206,250,5,196,130,177,248,153,158,93,176,251,120,148,222,105,89,98,174,248,230,213,125,111,252,175,76,63,172,174,205,71,116,33,104,7,103,87,20,94,111,198,115,183,148,91,174,122,227,70,8,172,242,168,197,75,97,206,163,47,88,150,32,124,188,124,237,164,0,180,78,165,109,29,128,137,191,98,147,62,122,157,127,104,209,213,182,162,163,84,45,42,112,75,233,218,36,248,35,9,168,161,207,197,225,168,141,244,169,183,151,6,227,67,222,245,98,114,203,79,201,105,181,210,119,216,143,35,248,249,175,46,211,155,222,16,78,116,190,78,221,186,240,154,112,216,57,151,144,11,220,160,98,106,165,49,152,123,223,33,185,161,167,75,146,230,244,93,219,146,59,235,38,70,72,156,145,174,134,112,205,47,34,222,6,238,142,11,86,110,189,60,211,186,216,168,183,69,187,254,0,30,66,15,106,14,253,79,199,198,108,222,9,226,171,14,150,248,246,87,145,235,111,177,229,240,93,135,13,90,210,228,5,97,251,111,99,190,166,7,78,253,63,254,70,181,228,29,55,114,34,161,229,141,85,152,249,221,137,169,182,119,225,21,46,182,94,79,106,107,249,133,224,209,16,48,24,71,254,232,4,112,182,198,136,60,134,239,6,158,203,130,112,12,30,122,124,107,243,6,235,66,1,225,207,19,160,114,116,89,81,6,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("80fa838c-1c21-420d-a9cd-0e248d1c1ada"));
		}

		#endregion

	}

	#endregion

}

