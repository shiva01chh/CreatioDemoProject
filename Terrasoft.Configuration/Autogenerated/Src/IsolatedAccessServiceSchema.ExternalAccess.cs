namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: IsolatedAccessServiceSchema

	/// <exclude/>
	public class IsolatedAccessServiceSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public IsolatedAccessServiceSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public IsolatedAccessServiceSchema(IsolatedAccessServiceSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("9e27e973-938b-44ff-bce6-c9f32c467a7b");
			Name = "IsolatedAccessService";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("c3c7809d-fee0-4b66-8bb6-9b3983c2cffd");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,3,157,86,75,111,227,54,16,62,107,129,253,15,132,123,145,1,151,190,39,142,139,164,241,6,46,214,187,70,156,54,135,96,15,180,52,182,137,72,164,66,82,217,122,131,252,247,14,31,178,37,89,74,130,230,224,216,228,188,191,153,143,35,88,14,186,96,9,144,59,80,138,105,185,49,244,79,41,54,124,91,42,102,184,20,116,246,175,1,37,88,118,153,36,160,245,146,37,143,108,11,159,63,189,124,254,20,149,154,139,45,89,237,181,129,252,188,245,27,173,100,25,36,214,132,166,55,32,64,241,228,68,230,43,23,79,39,135,183,165,48,60,7,186,66,21,150,241,95,46,140,19,41,188,125,230,9,44,100,10,217,155,151,244,18,131,120,126,223,8,189,135,245,81,160,94,141,60,175,171,214,111,20,208,235,171,222,171,25,230,97,56,232,46,1,116,118,180,140,247,227,241,152,76,116,153,231,76,237,167,225,247,181,145,36,201,152,214,100,35,21,1,107,109,79,116,178,131,156,145,196,97,68,74,13,41,89,239,81,21,128,36,10,54,23,131,185,150,25,51,144,122,188,66,134,131,241,148,86,94,198,53,55,15,215,204,48,196,219,40,150,152,31,120,80,148,235,140,39,193,173,75,96,191,114,30,231,98,35,241,254,197,69,27,253,166,96,139,5,37,168,170,141,42,19,35,149,62,35,75,167,236,37,218,9,185,131,185,192,130,88,76,65,19,70,4,252,36,28,245,153,192,246,147,27,98,118,80,79,164,237,29,115,240,113,209,131,253,113,219,193,164,96,138,229,68,96,87,95,12,236,231,96,58,107,212,205,158,209,201,216,137,117,107,21,138,91,147,215,92,23,25,219,99,23,151,185,248,230,44,217,207,42,206,32,69,82,47,134,120,88,185,134,229,80,202,118,26,49,22,204,246,130,245,54,34,225,71,159,211,33,177,115,22,69,206,245,133,211,57,119,7,203,30,5,20,234,179,229,20,95,3,126,32,82,15,97,19,207,165,146,5,40,219,180,31,64,243,6,140,38,216,153,218,254,183,69,17,181,2,53,218,181,7,49,215,125,11,200,215,160,226,16,188,7,109,248,163,86,192,80,34,39,240,66,182,96,206,173,199,115,242,250,127,67,235,193,238,227,49,118,85,184,51,230,94,148,58,242,104,65,242,218,75,11,72,29,191,107,63,214,142,24,120,24,120,2,129,169,9,115,163,79,114,164,53,98,152,126,212,157,179,239,109,3,176,76,203,48,114,93,252,68,175,152,134,138,70,200,216,177,70,248,89,39,142,135,75,93,124,3,131,58,5,114,237,154,103,136,254,45,60,149,92,65,142,189,160,227,250,15,75,184,88,200,119,84,172,20,13,7,233,240,132,157,58,137,142,156,145,90,188,167,132,181,0,179,147,233,135,187,155,227,192,170,220,61,30,132,173,101,105,66,67,107,219,75,16,248,221,22,207,1,144,150,14,245,54,14,26,63,172,129,248,39,55,59,146,98,63,5,204,28,214,222,155,195,10,4,91,103,152,234,71,9,14,26,79,243,60,29,76,239,236,228,181,220,243,212,6,186,225,160,78,137,79,129,41,149,208,45,146,180,89,147,140,107,131,10,149,132,155,133,239,72,14,46,236,58,242,209,3,54,203,92,60,203,71,136,125,121,237,140,44,191,175,238,6,35,114,37,211,253,202,236,51,11,55,138,45,48,32,92,31,14,167,244,94,177,162,128,116,68,44,206,160,205,23,87,238,134,176,63,162,127,105,41,70,142,251,110,113,99,193,119,7,222,150,245,243,248,224,227,63,35,65,96,105,243,7,83,27,102,5,186,204,76,115,124,191,98,238,147,54,113,79,109,75,84,77,231,143,181,35,244,155,146,31,135,175,194,162,98,238,186,149,5,19,24,66,245,148,55,207,46,200,223,56,212,88,87,225,151,38,218,161,232,169,255,153,89,94,179,187,21,42,197,43,247,109,104,223,82,255,53,110,218,25,58,157,136,34,7,25,46,240,58,28,68,118,65,211,113,227,149,117,207,92,165,240,69,201,60,30,224,162,84,165,124,11,137,84,233,225,254,126,7,10,80,191,221,131,67,58,215,179,167,146,101,177,231,59,122,44,249,73,141,134,62,163,249,76,148,57,118,22,54,63,233,40,59,180,78,52,230,237,11,128,203,41,36,165,129,163,126,140,163,152,218,114,78,67,253,163,64,197,250,144,33,106,123,33,92,75,141,143,241,31,150,149,48,241,146,211,174,154,248,56,27,96,54,194,66,155,29,160,90,7,243,176,224,92,237,173,165,248,24,70,101,243,157,13,160,101,153,118,61,41,127,208,195,251,30,69,190,225,221,114,117,186,122,28,188,143,250,87,14,111,231,53,252,15,230,78,48,160,119,210,78,73,60,124,99,173,192,83,119,81,255,251,15,60,232,131,14,113,12,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("9e27e973-938b-44ff-bce6-c9f32c467a7b"));
		}

		#endregion

	}

	#endregion

}

