namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: CaseTermCalculateEntryPointSchema

	/// <exclude/>
	public class CaseTermCalculateEntryPointSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public CaseTermCalculateEntryPointSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public CaseTermCalculateEntryPointSchema(CaseTermCalculateEntryPointSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("f2ff0679-815f-4ee9-9e1f-054f65a14aeb");
			Name = "CaseTermCalculateEntryPoint";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("c4b72b51-b2ae-4127-a458-608f5464622c");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,3,221,88,91,111,219,54,20,126,118,129,254,7,206,123,145,1,65,126,111,108,23,134,27,119,1,214,34,136,147,151,189,12,140,124,172,104,147,72,131,164,156,121,69,254,123,15,73,81,23,90,242,37,232,134,160,65,16,136,212,57,223,185,95,20,70,115,144,91,26,3,185,7,33,168,228,27,21,45,56,219,164,73,33,168,74,57,139,22,52,3,182,166,66,190,127,247,237,253,187,65,33,83,150,144,213,94,42,200,175,188,51,114,102,25,196,154,77,70,159,129,129,72,227,154,166,41,32,207,57,235,126,211,16,125,146,32,194,251,28,245,139,139,204,156,87,32,118,105,12,221,124,162,247,62,90,210,88,113,145,130,236,165,88,41,203,143,239,199,227,49,153,200,34,207,169,216,207,202,243,53,83,98,79,182,60,101,138,108,184,32,113,173,19,81,168,163,116,124,227,6,227,182,120,204,210,152,196,25,149,146,44,168,132,166,53,96,32,111,53,34,146,126,51,146,7,191,10,72,52,228,50,133,108,45,63,144,91,145,238,144,212,190,220,218,3,17,64,215,156,101,123,226,57,231,119,158,24,43,200,159,241,225,229,85,41,0,35,109,101,180,5,222,10,190,5,161,208,67,68,75,229,10,131,12,107,75,227,251,195,92,124,6,37,137,122,2,82,72,64,119,112,198,108,90,68,21,199,216,103,153,236,104,86,64,117,188,63,202,92,211,110,157,54,228,1,169,23,21,177,127,212,185,59,24,36,160,174,204,131,243,150,44,47,94,142,59,0,129,164,18,133,78,19,237,119,19,185,35,230,223,176,84,165,52,75,255,69,135,81,194,224,153,164,200,79,25,150,25,223,24,191,76,36,0,137,5,108,166,195,35,161,31,142,103,54,63,122,252,86,166,208,17,132,96,100,45,127,121,3,218,154,155,45,21,52,39,12,219,206,116,88,180,66,52,156,117,197,124,50,54,28,231,154,235,69,189,45,161,244,197,192,35,154,122,100,54,67,186,202,4,73,123,170,170,246,161,192,206,167,204,93,224,73,63,39,209,190,128,122,226,189,181,253,9,255,220,167,57,232,124,220,97,65,46,5,207,31,84,28,84,247,235,242,33,36,250,239,31,156,161,98,27,78,84,227,224,156,32,64,21,130,181,232,162,18,86,223,5,53,84,139,187,105,132,83,171,236,187,218,53,119,56,77,176,86,128,92,255,3,113,161,160,138,145,126,41,107,69,49,191,132,210,167,176,10,231,13,195,86,137,133,109,58,166,59,132,70,215,65,203,26,237,86,119,81,179,175,20,162,73,146,83,249,183,51,113,71,77,43,54,227,171,80,105,150,170,61,70,80,39,184,27,106,15,246,214,75,27,107,164,97,23,206,30,203,215,97,105,80,82,59,202,232,14,168,65,49,118,78,141,66,209,111,84,46,51,154,4,109,101,181,191,21,197,98,115,88,35,107,237,71,95,235,104,190,94,7,13,151,53,61,20,57,102,141,27,182,156,51,34,84,86,57,243,209,98,127,32,172,200,50,79,229,21,207,138,203,85,230,217,238,213,26,107,222,215,40,108,114,214,233,125,97,46,222,65,252,99,178,241,230,154,21,57,8,250,152,193,196,97,56,146,25,54,79,251,36,189,34,124,155,105,171,169,93,169,35,117,79,99,137,240,240,149,63,123,209,250,159,18,191,209,137,250,243,190,225,245,183,84,2,253,186,215,21,240,106,213,123,139,225,244,116,57,181,193,44,120,193,112,133,19,101,72,205,12,32,148,173,113,65,144,165,167,236,157,226,38,149,207,29,249,84,36,88,58,8,61,156,125,74,13,52,146,146,231,84,61,17,67,38,205,254,140,187,22,218,157,224,190,217,154,255,7,104,85,221,14,103,43,253,104,50,217,223,192,15,33,172,231,228,108,206,8,127,252,11,139,7,151,28,170,244,214,97,226,106,86,158,67,203,91,118,35,168,67,105,108,38,93,205,199,159,128,149,213,19,180,18,63,53,194,82,135,25,169,124,19,146,195,206,212,108,14,151,85,119,123,11,153,139,196,53,147,122,167,157,151,146,3,127,37,11,73,111,139,169,180,61,129,88,71,60,172,121,26,56,18,244,39,35,134,12,155,143,94,30,237,199,216,94,111,81,19,191,25,175,74,218,89,112,96,84,3,177,89,105,136,234,4,104,196,160,214,64,87,151,143,111,49,58,90,179,125,145,110,72,208,185,22,254,50,53,117,233,98,52,208,44,165,79,14,247,197,4,68,39,202,72,43,216,146,29,52,45,41,13,124,33,144,97,228,219,130,90,189,5,81,190,224,181,75,129,151,74,117,67,140,170,122,237,236,171,233,53,37,160,246,159,235,71,216,207,215,208,27,151,57,122,126,87,141,61,75,219,17,151,176,149,40,165,78,85,94,186,94,135,66,218,137,22,45,10,33,144,73,223,70,142,234,234,162,241,139,152,109,75,180,234,109,173,165,115,146,241,79,197,25,221,200,235,124,139,243,117,84,249,101,208,168,185,238,213,182,103,217,9,189,185,111,6,125,41,180,29,203,31,48,138,187,212,60,216,122,186,71,82,239,24,242,84,110,228,212,145,1,212,57,83,108,139,110,254,111,228,231,30,47,103,143,136,37,23,241,193,151,210,207,50,39,222,94,127,215,24,103,52,206,75,90,230,171,123,217,127,208,86,78,22,103,115,59,212,119,248,171,127,190,3,107,234,229,71,11,22,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("f2ff0679-815f-4ee9-9e1f-054f65a14aeb"));
		}

		#endregion

	}

	#endregion

}

