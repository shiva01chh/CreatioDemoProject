namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: CompletenessServiceSchema

	/// <exclude/>
	public class CompletenessServiceSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public CompletenessServiceSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public CompletenessServiceSchema(CompletenessServiceSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("ecd25da0-3ca8-4035-8f47-b02bcfc50e97");
			Name = "CompletenessService";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("723df037-0016-403c-a198-8225dd0ceb1a");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,3,205,84,93,111,218,48,20,125,78,165,254,7,139,190,36,82,148,31,208,141,73,192,214,138,73,148,10,186,245,1,237,193,56,23,136,230,216,153,63,216,162,137,255,190,235,196,105,67,9,217,75,43,149,23,240,185,199,247,227,220,99,4,205,65,23,148,1,121,0,165,168,150,27,147,76,164,216,100,91,171,168,201,164,184,188,248,123,121,17,88,157,137,45,89,150,218,64,254,225,197,57,89,130,218,103,12,102,50,5,222,27,76,30,97,221,79,24,49,147,237,171,186,39,60,188,139,92,173,49,182,52,212,192,51,161,221,185,130,228,134,50,35,85,6,186,139,225,178,76,100,158,183,11,116,69,155,182,22,210,26,228,32,25,233,43,15,162,64,70,97,149,31,14,251,12,27,106,185,105,241,161,194,151,186,56,193,70,186,184,3,131,21,10,156,113,157,241,204,148,11,248,101,51,5,57,8,163,195,246,193,9,66,134,228,63,87,28,43,241,64,26,185,34,133,93,243,140,17,198,169,214,196,221,227,96,64,160,112,190,27,114,77,198,84,131,63,197,100,186,0,154,206,5,47,219,226,98,30,183,246,224,74,193,22,49,50,3,179,147,169,190,38,247,202,237,7,42,57,130,162,62,84,249,186,42,77,20,96,184,35,18,70,164,74,31,40,48,86,9,50,113,205,214,123,43,147,91,48,31,207,100,252,20,10,248,141,67,9,109,148,117,236,145,218,90,167,67,56,176,26,20,6,4,48,231,158,65,76,190,29,1,81,228,246,29,28,234,198,175,64,164,245,100,254,124,50,102,37,98,29,92,205,11,168,223,66,123,239,193,10,205,50,21,123,249,19,194,250,26,46,107,112,63,95,62,184,218,42,123,0,236,222,137,131,40,78,180,0,38,85,218,30,9,105,99,153,150,75,83,114,71,194,108,51,68,233,22,158,208,228,81,209,162,128,52,174,164,114,75,6,109,110,164,202,169,57,186,80,67,201,87,45,69,76,22,248,156,81,31,232,231,85,78,105,172,210,33,116,147,133,116,182,30,222,218,44,37,170,194,167,105,76,112,27,238,29,105,182,131,156,222,225,63,74,76,42,134,41,11,248,78,185,117,243,185,197,57,48,140,154,221,159,115,141,246,223,195,62,255,84,219,12,250,58,87,254,71,205,52,170,244,101,131,38,128,5,124,169,164,123,202,214,128,173,201,158,134,242,61,28,8,163,134,237,72,248,229,15,131,194,217,132,64,212,81,171,118,238,249,126,253,141,224,57,205,144,64,141,29,124,165,246,147,57,26,239,240,90,78,69,21,40,103,214,29,71,156,143,203,247,105,216,189,68,115,245,181,90,27,148,181,144,105,250,138,182,107,108,211,219,194,139,234,111,185,167,119,189,153,240,205,133,15,251,254,219,17,173,2,248,249,7,79,147,207,82,236,8,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("ecd25da0-3ca8-4035-8f47-b02bcfc50e97"));
		}

		#endregion

	}

	#endregion

}

