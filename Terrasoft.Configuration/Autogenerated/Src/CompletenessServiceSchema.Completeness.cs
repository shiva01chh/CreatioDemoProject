namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: CompletenessServiceSchema

	/// <exclude/>
	public class CompletenessServiceSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public CompletenessServiceSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public CompletenessServiceSchema(CompletenessServiceSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("ecd25da0-3ca8-4035-8f47-b02bcfc50e97");
			Name = "CompletenessService";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("723df037-0016-403c-a198-8225dd0ceb1a");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,3,205,84,93,111,218,48,20,125,78,165,254,7,139,190,36,82,148,31,208,141,73,192,214,138,73,148,10,186,245,1,237,193,56,23,136,150,216,153,63,216,162,137,255,190,235,196,105,77,9,217,75,43,149,23,240,185,199,247,227,220,99,56,45,64,149,148,1,121,0,41,169,18,27,157,76,4,223,100,91,35,169,206,4,191,188,248,123,121,17,24,149,241,45,89,86,74,67,241,225,197,57,89,130,220,103,12,102,34,133,188,55,152,60,194,186,159,48,98,58,219,215,117,79,120,120,23,185,74,97,108,169,169,134,103,130,223,185,132,228,134,50,45,100,6,170,139,97,179,76,68,81,248,5,186,162,109,91,11,97,52,114,144,140,244,149,3,81,32,45,177,202,15,139,125,134,13,53,185,246,248,80,227,75,85,158,96,35,85,222,129,198,10,37,206,184,206,242,76,87,11,248,101,50,9,5,112,173,66,255,96,5,33,67,242,159,43,150,149,56,32,141,108,145,210,172,243,140,17,150,83,165,136,189,151,131,6,142,194,185,110,200,53,25,83,5,238,20,147,233,2,104,58,231,121,229,139,139,121,236,218,131,43,9,91,196,200,12,244,78,164,234,154,220,75,187,31,168,229,8,202,230,80,231,235,170,52,145,128,225,142,72,24,145,58,125,32,65,27,201,201,196,54,219,236,173,74,110,65,127,60,147,241,83,200,225,55,14,197,149,150,198,178,71,114,107,172,14,225,192,40,144,24,224,192,172,123,6,49,249,118,4,68,145,221,119,112,104,26,191,2,158,54,147,185,243,201,152,181,136,77,112,53,47,161,121,11,254,222,131,21,154,101,202,247,226,39,132,205,53,92,214,224,126,190,124,176,181,101,246,0,216,189,21,7,81,156,104,1,76,200,212,31,9,105,99,145,86,75,93,229,150,132,217,102,136,210,45,60,161,201,163,164,101,9,105,92,75,101,151,12,74,223,8,89,80,125,116,161,129,146,175,74,240,152,44,240,57,163,62,208,207,171,157,210,90,165,67,232,54,11,233,108,61,188,53,89,74,100,141,79,211,152,224,54,236,59,82,108,7,5,189,195,127,148,152,212,12,93,149,240,157,230,198,206,103,23,103,193,48,106,119,127,206,53,202,125,15,251,252,83,111,51,232,235,92,186,31,13,83,203,202,149,13,218,0,22,112,165,146,238,41,189,1,189,201,158,134,114,61,28,8,163,154,237,72,248,229,15,131,210,218,132,64,212,81,171,113,238,249,126,221,141,224,57,205,144,64,131,29,92,37,255,201,28,141,119,120,45,167,162,10,52,103,198,30,71,121,62,174,222,167,97,247,2,205,213,215,106,99,80,230,33,211,244,21,109,215,218,166,183,133,23,213,223,114,79,239,122,51,225,155,11,31,246,253,183,35,90,7,252,207,63,13,187,155,14,245,8,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("ecd25da0-3ca8-4035-8f47-b02bcfc50e97"));
		}

		#endregion

	}

	#endregion

}

