namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: TenantDataProviderSchema

	/// <exclude/>
	public class TenantDataProviderSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public TenantDataProviderSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public TenantDataProviderSchema(TenantDataProviderSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("9cf1bddb-587e-4ccd-8e7a-cb0987fe1fda");
			Name = "TenantDataProvider";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("120fd877-7905-4e7f-9414-1956e0c20629");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,3,141,85,81,111,218,48,16,126,166,82,255,195,137,62,148,106,18,121,47,20,105,162,91,197,195,36,84,218,231,201,36,7,88,37,118,118,118,216,24,218,127,223,217,78,192,132,176,133,23,226,243,221,119,119,223,125,185,40,145,163,41,68,138,240,134,68,194,232,149,29,78,181,90,201,117,73,194,74,173,134,111,36,210,15,169,214,183,55,135,219,155,94,105,248,17,22,123,99,49,31,29,207,113,44,33,219,249,230,142,112,205,241,48,221,10,99,30,217,69,9,101,103,106,165,95,57,161,86,6,189,87,146,36,48,54,101,158,11,218,79,170,243,51,154,84,46,209,0,85,158,176,34,157,179,27,34,164,132,171,167,126,0,123,22,86,204,73,239,100,134,52,124,65,123,74,49,120,232,39,147,97,13,159,68,248,69,185,220,202,20,82,87,84,75,77,240,8,49,234,169,212,222,193,151,123,236,138,61,10,36,43,145,91,155,123,204,112,223,236,199,27,128,139,51,160,9,140,251,103,96,101,165,221,243,137,118,146,153,79,183,146,45,108,31,30,17,226,146,235,154,141,37,199,245,172,10,159,250,168,89,6,7,88,163,29,57,236,17,252,233,92,133,173,198,122,172,194,122,50,254,91,197,75,41,51,71,220,213,220,119,168,178,64,146,63,7,107,195,216,170,141,152,248,171,218,168,28,64,242,208,40,247,10,13,234,168,202,175,186,233,58,251,56,39,212,133,44,2,198,121,61,77,1,124,149,184,205,220,240,73,238,132,13,98,238,21,225,192,194,21,153,86,219,125,61,179,239,133,176,155,57,63,85,208,240,4,253,68,20,50,9,9,147,130,175,250,163,14,24,78,171,87,48,28,35,53,70,131,238,19,223,44,102,75,101,106,53,117,209,109,228,14,122,5,34,80,119,69,31,222,82,8,18,57,40,94,42,79,253,146,103,193,8,10,83,55,165,254,100,198,96,66,113,225,12,245,126,118,55,28,39,62,48,214,217,229,124,6,231,65,112,142,255,224,98,123,189,71,88,10,131,131,198,29,235,180,93,157,71,102,190,161,221,232,172,11,41,110,140,166,69,110,215,40,33,180,37,41,51,121,61,91,102,118,131,199,224,113,82,251,68,253,183,173,33,159,59,16,51,224,158,124,199,59,65,224,228,243,78,91,86,68,184,116,207,159,46,68,55,242,254,33,21,44,152,135,55,253,129,74,254,198,140,23,195,43,254,40,209,216,113,91,218,201,160,74,240,224,33,254,181,99,190,252,194,180,180,126,117,123,60,176,26,238,155,42,189,191,92,62,63,113,9,159,231,179,46,60,198,50,186,248,36,196,187,220,125,2,90,169,109,89,251,141,175,71,196,109,217,206,107,244,34,118,226,245,50,231,100,80,54,24,237,176,57,217,198,191,191,250,93,76,76,181,7,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("9cf1bddb-587e-4ccd-8e7a-cb0987fe1fda"));
		}

		#endregion

	}

	#endregion

}

