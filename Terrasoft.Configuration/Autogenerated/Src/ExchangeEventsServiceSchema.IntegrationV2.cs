namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: ExchangeEventsServiceSchema

	/// <exclude/>
	public class ExchangeEventsServiceSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ExchangeEventsServiceSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ExchangeEventsServiceSchema(ExchangeEventsServiceSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("28c0f024-3df7-43e9-85f7-0565703d9ffc");
			Name = "ExchangeEventsService";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("702d7ea9-7a7c-4c64-8826-191575af58ce");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,3,237,85,193,110,226,48,20,60,83,169,255,96,101,47,32,161,228,222,2,18,173,218,138,213,178,173,72,87,61,160,61,152,228,145,90,155,216,89,219,137,26,85,251,239,251,108,39,16,88,146,85,47,156,202,205,227,231,153,231,121,99,194,105,6,42,167,17,144,103,144,146,42,177,213,254,173,224,91,150,20,146,106,38,248,229,197,251,229,197,160,80,140,39,36,172,148,134,236,250,104,237,135,32,75,22,193,82,196,144,246,110,250,243,72,179,210,210,246,215,189,192,102,95,176,224,26,18,215,204,60,103,190,89,202,45,118,172,246,37,237,222,37,248,247,52,210,66,178,211,21,200,141,85,89,102,123,192,253,47,18,18,164,38,183,41,85,234,138,220,189,69,175,148,39,112,87,2,215,170,238,202,22,174,235,5,218,163,37,42,252,52,216,92,229,223,65,35,95,142,13,110,88,202,116,181,130,223,5,147,144,153,243,195,246,194,220,141,76,201,127,142,152,42,191,6,226,145,17,201,139,77,202,34,18,153,6,79,247,71,174,200,13,85,176,235,118,240,110,59,222,221,109,9,250,85,196,120,187,39,41,52,68,26,98,183,31,4,1,153,168,34,203,168,172,102,13,240,0,90,33,10,64,34,9,219,169,183,104,36,191,49,156,20,7,185,164,156,38,32,189,96,70,24,87,154,242,8,252,29,91,208,166,203,27,57,210,69,98,212,58,182,134,35,98,162,55,24,148,84,146,204,97,110,178,21,186,104,199,85,47,125,36,153,44,142,142,215,123,179,225,232,218,178,72,208,133,228,71,68,126,143,252,15,5,18,103,205,241,2,232,161,99,249,83,251,10,60,118,214,118,249,108,71,214,99,114,168,169,68,155,161,214,38,105,45,78,54,85,219,251,37,101,233,70,188,133,21,143,66,208,26,147,172,172,237,49,14,159,109,25,200,14,227,45,146,83,73,51,194,241,133,79,189,204,17,45,98,111,246,33,250,73,96,89,44,233,250,49,7,247,14,219,79,96,176,198,23,181,224,165,248,5,67,119,127,156,142,247,244,24,62,123,99,114,35,226,42,212,85,106,114,143,101,75,80,10,189,221,161,254,139,164,121,14,241,216,78,200,132,30,148,190,23,50,163,250,224,128,131,252,175,74,240,49,89,225,31,150,224,10,250,235,236,203,105,158,78,41,88,236,44,111,134,60,124,40,16,218,185,210,68,173,51,166,117,108,80,173,47,176,46,105,117,173,127,40,184,215,106,39,169,35,28,34,255,204,198,121,179,33,242,243,70,163,165,247,129,100,172,0,135,67,53,124,166,227,156,233,104,92,63,103,66,254,209,60,157,146,163,47,145,67,15,65,139,153,223,95,80,189,33,84,236,9,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("28c0f024-3df7-43e9-85f7-0565703d9ffc"));
		}

		#endregion

	}

	#endregion

}

