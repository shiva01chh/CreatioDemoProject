namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: ForecastDataIteratorSchema

	/// <exclude/>
	public class ForecastDataIteratorSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ForecastDataIteratorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ForecastDataIteratorSchema(ForecastDataIteratorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("21b3dfe6-f171-80f3-2d69-1b482f22f3f9");
			Name = "ForecastDataIterator";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("e0b9d996-6f7e-4520-a678-da960c79be39");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,3,213,87,91,111,219,54,20,126,118,129,254,7,34,123,145,48,67,201,246,152,88,14,178,180,73,13,164,107,144,108,123,41,138,129,145,142,45,34,18,229,145,148,3,163,240,127,223,225,205,162,100,217,49,210,189,44,15,134,72,158,251,119,110,225,180,2,185,164,25,144,63,64,8,42,235,185,74,174,107,62,103,139,70,80,197,106,158,220,212,2,50,42,213,95,191,190,127,247,253,253,187,81,35,25,95,144,199,181,84,80,93,244,206,200,90,150,144,105,62,153,220,2,7,193,178,29,154,59,198,255,105,47,67,181,85,85,243,225,23,1,251,238,147,27,154,169,90,48,144,72,129,52,63,9,88,160,122,50,227,10,196,28,29,59,39,51,239,194,7,170,232,12,175,41,50,24,226,211,211,83,50,145,77,85,81,177,158,186,179,39,38,57,82,19,230,200,19,79,125,26,144,47,155,167,146,101,132,121,85,251,52,141,116,220,118,148,153,11,75,4,146,168,66,212,205,162,32,180,44,137,168,95,36,169,231,68,46,33,99,115,6,57,153,59,185,201,86,208,105,95,210,100,73,5,173,8,71,64,211,19,89,0,168,147,233,214,23,115,78,38,167,134,102,152,197,124,3,154,35,79,166,247,219,239,14,207,170,102,185,183,248,1,109,140,30,181,88,43,124,76,134,124,55,130,36,105,101,199,26,199,141,69,10,120,110,193,234,0,119,93,82,41,207,15,72,123,21,185,144,37,80,125,8,194,76,43,61,168,83,99,168,99,224,205,188,23,245,18,132,194,188,59,39,247,70,136,125,31,68,249,166,225,166,40,16,101,170,200,82,212,25,72,137,160,123,88,13,226,123,176,117,22,94,25,1,147,217,71,222,84,104,217,83,9,147,219,134,229,211,41,209,72,120,107,111,56,249,78,22,160,46,136,212,63,155,31,177,105,129,9,185,252,33,203,110,181,132,55,154,119,85,213,13,87,186,10,76,53,168,154,60,65,96,37,154,76,137,98,21,28,182,13,75,83,199,231,218,200,234,168,38,41,249,229,236,236,194,129,218,77,197,183,230,231,27,123,202,35,232,158,25,68,222,80,25,183,41,207,29,121,208,34,24,82,176,21,203,177,47,60,173,45,113,86,52,252,121,56,195,191,126,128,57,109,74,245,27,227,57,182,207,72,173,151,80,207,163,193,86,21,199,223,142,169,9,178,183,167,246,171,228,134,65,153,235,10,17,108,133,62,216,199,165,61,180,50,62,49,228,23,89,177,70,168,180,188,7,88,214,146,161,192,53,249,91,135,161,61,15,227,213,98,131,115,71,137,70,15,132,94,89,58,159,134,172,142,254,148,32,144,147,219,193,69,154,206,49,38,166,121,143,122,68,105,143,76,183,53,151,55,123,173,235,180,12,81,43,228,132,220,135,196,29,73,88,70,219,184,60,130,82,136,29,90,92,77,201,246,118,168,150,90,65,182,55,219,223,131,132,61,207,122,199,1,214,163,252,219,141,253,49,112,31,65,98,225,88,104,175,204,215,72,128,106,4,239,103,10,185,188,36,81,255,46,181,213,107,87,134,53,110,40,106,114,132,85,211,200,42,26,113,120,9,83,236,74,44,16,42,174,162,147,110,46,156,140,123,65,140,99,51,246,76,130,224,175,52,136,236,218,182,162,101,3,38,202,175,166,210,103,80,69,189,183,176,236,156,70,237,34,28,214,71,205,231,49,217,233,227,250,21,189,68,25,179,92,162,153,188,41,75,95,21,79,117,93,146,130,202,207,40,91,203,197,231,57,45,37,88,119,123,140,157,35,194,163,195,121,199,164,178,106,34,23,35,102,186,254,92,7,41,37,103,237,93,102,122,120,26,14,116,223,217,91,162,194,131,120,7,43,40,123,58,19,67,236,245,32,138,122,155,44,245,106,171,3,143,196,246,42,249,88,45,213,218,18,229,181,207,178,21,21,182,37,167,71,36,169,206,172,240,213,109,74,227,182,118,199,198,251,123,186,0,29,104,187,113,123,85,163,237,196,74,173,215,227,246,94,126,241,161,177,49,242,79,159,250,142,119,35,177,67,102,166,114,222,11,144,167,154,45,56,186,248,192,22,133,210,254,98,186,131,127,186,11,194,181,13,157,125,219,184,192,154,80,233,55,173,195,251,97,214,136,78,252,71,14,228,159,211,46,177,123,237,38,85,79,156,139,139,35,13,33,52,122,180,145,95,132,155,123,81,124,153,152,87,71,205,230,36,218,17,119,22,111,131,111,219,137,35,222,116,192,183,105,108,84,216,153,29,225,55,73,167,250,42,121,128,172,22,249,44,143,3,61,51,169,77,49,8,68,93,64,226,86,97,55,161,131,93,233,50,153,241,85,253,12,145,85,237,5,111,8,96,133,13,177,15,236,91,123,100,140,244,174,65,179,130,68,186,246,180,253,184,42,57,23,91,203,70,59,61,36,108,20,189,210,226,25,85,17,38,245,215,111,216,220,180,192,77,188,213,182,9,163,185,33,47,5,43,129,68,1,196,113,56,63,125,27,51,205,37,12,225,110,133,123,91,221,12,232,151,127,218,22,92,39,249,142,238,174,175,45,246,255,171,127,223,220,28,254,47,254,139,115,97,183,118,93,23,144,61,251,97,248,59,78,135,72,155,132,59,166,121,246,89,16,228,233,94,134,64,131,227,178,182,165,214,58,123,213,238,63,238,186,211,109,245,142,36,125,143,57,144,191,135,18,97,104,255,55,119,225,223,191,52,189,113,179,58,17,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("21b3dfe6-f171-80f3-2d69-1b482f22f3f9"));
		}

		#endregion

	}

	#endregion

}

