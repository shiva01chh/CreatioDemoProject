namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: TermCalculationServiceSchema

	/// <exclude/>
	public class TermCalculationServiceSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public TermCalculationServiceSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public TermCalculationServiceSchema(TermCalculationServiceSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("8a10a692-749d-4236-a578-c1816f7dfa6e");
			Name = "TermCalculationService";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("e9cdff4a-a92d-4d26-906f-df90167f5485");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,3,221,88,91,111,26,57,20,126,6,41,255,193,75,94,6,41,50,239,77,136,68,89,53,98,213,108,17,176,170,180,81,31,204,204,129,204,118,198,158,181,61,89,177,85,254,123,143,111,204,24,152,144,244,173,205,3,140,143,143,191,115,255,24,167,86,57,223,146,229,78,105,40,175,47,250,117,107,73,239,10,177,102,69,254,63,211,185,224,135,155,139,154,235,188,4,186,4,153,119,42,225,230,83,158,194,189,200,160,120,105,143,78,82,157,63,157,133,160,159,97,125,184,223,22,173,64,74,166,196,70,211,169,144,208,33,166,31,88,170,133,204,65,157,84,224,155,124,91,203,216,149,102,31,173,161,78,89,218,205,139,62,103,37,168,138,165,208,5,65,81,94,78,89,145,214,133,93,251,104,46,250,223,46,250,189,75,9,91,148,145,105,193,148,122,71,186,84,123,163,209,136,220,168,186,44,153,220,221,250,245,165,249,115,159,246,59,60,198,15,228,88,30,240,70,45,192,7,111,11,93,215,18,179,243,197,200,38,170,250,19,52,6,91,161,59,235,188,200,245,110,1,255,214,185,132,18,184,86,73,123,97,170,67,198,228,204,17,163,69,189,32,27,26,35,85,189,46,242,148,164,38,1,29,241,191,35,239,153,130,38,25,38,113,251,204,221,131,126,20,25,230,110,110,129,204,214,97,178,172,96,42,176,91,21,145,128,193,153,115,166,115,9,227,25,97,68,137,162,110,100,90,144,129,183,53,195,238,26,92,237,151,115,60,106,150,115,153,99,243,232,221,128,210,189,185,209,161,189,155,138,73,86,18,211,30,227,129,196,136,65,233,193,237,194,61,144,141,144,68,165,143,144,213,5,100,36,3,150,21,57,7,69,111,70,246,88,131,34,65,215,146,171,219,9,39,98,253,15,164,154,232,71,166,73,138,101,98,57,87,184,130,19,49,69,17,33,104,64,49,176,15,159,42,112,157,217,174,117,239,1,251,122,198,159,196,87,72,92,74,177,152,131,249,167,229,10,35,126,47,178,221,82,239,10,83,96,84,187,7,165,216,22,246,82,250,89,178,170,130,236,138,248,240,62,8,89,162,147,109,101,39,162,127,40,193,175,140,185,222,2,167,70,112,5,47,235,218,22,9,61,226,203,96,154,36,156,38,119,160,91,226,36,82,113,169,246,185,31,18,219,54,189,39,38,73,173,64,98,240,28,92,218,198,228,175,72,112,189,87,212,173,126,196,138,141,221,156,58,246,216,81,180,125,179,138,52,102,171,217,71,239,194,109,98,81,122,61,14,255,97,243,113,165,101,109,142,77,228,182,54,163,144,12,98,47,48,205,177,96,120,117,14,64,53,109,57,203,240,188,143,148,46,219,242,87,195,152,102,63,5,227,228,231,97,42,63,21,17,198,124,47,28,186,243,67,151,220,223,153,134,149,233,86,51,197,136,101,251,209,10,198,36,236,209,57,147,10,146,0,181,56,208,60,70,114,83,224,81,226,210,209,240,104,240,98,156,43,226,60,59,224,30,27,35,67,202,64,195,13,240,20,7,171,228,202,17,252,161,7,97,234,126,208,131,78,7,150,45,220,83,14,184,233,38,166,50,167,70,196,245,125,111,17,231,167,157,46,95,219,101,236,127,59,28,171,240,108,205,61,155,143,115,52,235,104,169,68,138,50,63,158,150,151,214,128,164,7,118,167,42,24,118,57,242,30,102,227,205,20,58,9,205,101,73,180,49,148,129,36,98,19,24,175,131,70,125,167,4,199,204,11,76,97,49,52,147,91,208,206,163,95,133,47,11,129,33,34,73,45,108,188,106,149,167,95,205,111,118,179,120,129,34,93,142,172,22,218,50,173,101,208,146,225,245,219,73,52,101,5,240,140,73,180,140,85,138,232,180,235,149,105,218,113,164,197,175,116,138,29,172,97,102,135,4,89,170,217,73,98,207,26,50,154,226,91,4,18,145,243,44,223,36,157,142,253,134,17,215,69,17,242,209,158,240,90,166,176,95,118,114,213,50,210,243,22,123,71,167,205,215,223,130,99,16,27,97,50,240,4,82,27,89,18,107,30,254,50,208,105,45,37,114,174,73,56,13,24,129,198,122,254,165,56,194,254,40,48,214,224,70,92,218,196,212,117,216,149,10,234,218,7,101,6,111,89,49,126,228,91,136,121,134,237,20,40,99,72,45,188,51,248,220,38,169,150,241,183,177,73,155,51,14,38,127,79,49,102,252,81,154,186,244,252,24,189,172,44,108,67,48,204,89,100,27,164,115,82,49,172,68,55,187,204,219,188,246,171,176,200,190,95,177,21,204,243,196,100,98,110,18,241,90,46,121,53,83,100,17,60,42,190,208,247,232,141,95,6,7,219,228,244,243,115,206,81,46,94,26,209,240,203,125,80,159,230,213,169,169,83,199,192,158,24,213,216,131,102,90,47,209,13,119,249,194,149,145,68,130,227,75,237,241,59,185,187,128,30,223,104,237,129,208,206,237,251,17,122,162,232,169,107,171,239,81,156,71,157,179,194,223,34,79,26,140,46,141,115,41,112,28,117,14,209,189,177,147,134,60,32,154,73,117,7,161,60,96,234,217,61,148,107,144,237,225,185,171,243,140,68,239,227,228,155,35,106,124,219,112,57,87,254,97,207,132,231,242,251,108,254,237,208,239,127,7,105,105,141,46,183,17,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("8a10a692-749d-4236-a578-c1816f7dfa6e"));
		}

		#endregion

	}

	#endregion

}

