namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: OpportunityMoodEventListenerSchema

	/// <exclude/>
	public class OpportunityMoodEventListenerSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public OpportunityMoodEventListenerSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public OpportunityMoodEventListenerSchema(OpportunityMoodEventListenerSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("4d9af4c8-f92c-4ec5-87df-9b4421fd7bc3");
			Name = "OpportunityMoodEventListener";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("5ef32b22-5119-483b-953d-678c3fffad13");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,3,149,86,77,111,219,56,16,189,23,232,127,152,85,47,50,16,200,247,38,41,208,196,78,214,64,211,116,235,118,123,40,22,5,45,141,109,46,36,82,37,41,167,66,224,255,190,51,162,28,75,148,226,77,121,145,52,156,207,199,55,67,41,81,160,45,69,138,240,5,141,17,86,175,93,114,173,213,90,110,42,35,156,212,234,245,171,199,215,175,128,86,101,165,218,192,178,182,14,139,243,161,136,172,242,28,83,54,177,201,45,42,52,50,29,83,155,9,39,72,183,40,180,26,219,254,32,213,207,158,188,155,214,192,168,187,105,240,196,86,50,187,58,181,59,87,78,58,137,246,37,58,201,124,135,202,177,170,87,126,99,112,67,69,195,117,46,172,125,11,247,101,169,141,171,148,116,245,157,214,89,163,252,65,82,109,132,200,193,100,58,157,194,133,173,138,66,152,250,221,81,244,167,80,89,142,6,214,218,132,110,0,57,122,13,216,196,78,58,110,166,67,63,23,22,81,228,86,67,106,112,125,25,157,174,35,185,18,22,27,89,221,203,53,130,105,235,242,251,200,110,188,76,183,88,136,143,196,30,184,132,40,200,54,154,252,227,77,203,106,149,203,20,82,134,230,36,50,240,22,158,201,195,59,122,60,64,215,69,252,70,98,158,17,228,159,140,220,9,135,93,149,210,139,224,171,69,67,116,86,158,152,240,163,234,125,159,143,153,24,20,153,86,121,13,156,193,133,117,134,184,240,14,126,164,58,175,10,197,5,91,170,88,225,67,111,63,158,192,227,209,21,175,136,85,163,179,64,200,236,31,8,239,100,129,95,234,18,163,163,124,63,154,154,15,198,173,178,40,196,6,251,103,112,144,70,61,211,55,168,50,15,215,81,54,68,242,14,221,86,255,15,148,75,228,246,134,91,116,254,237,175,10,77,29,223,86,50,3,153,13,202,223,9,3,214,91,120,180,188,81,28,156,192,164,111,197,139,7,9,33,29,251,7,15,35,235,98,138,48,166,122,99,116,17,15,225,152,36,223,182,104,48,142,22,68,197,17,179,133,157,255,172,68,126,8,241,73,24,50,114,196,234,14,69,155,184,130,27,100,134,107,81,229,76,217,38,204,130,82,1,97,219,130,206,251,238,169,117,81,164,91,136,185,126,79,25,144,170,199,158,1,84,188,60,84,135,210,189,246,36,240,189,239,127,26,116,149,81,173,101,71,117,63,122,208,29,26,156,60,126,237,200,27,102,125,2,180,66,216,73,2,71,228,176,211,116,232,215,186,172,27,64,62,99,170,77,22,207,219,9,213,60,6,69,202,53,196,126,139,46,7,231,235,252,91,228,21,31,146,71,53,154,192,31,68,149,42,207,71,17,242,229,158,134,164,37,35,49,142,223,146,143,248,192,207,56,4,178,215,216,191,219,215,188,152,87,65,34,65,136,142,215,228,125,150,125,22,106,131,113,143,5,129,129,51,245,88,36,166,145,84,212,50,109,211,181,41,46,58,162,23,180,20,175,100,161,156,30,235,149,103,212,151,232,226,110,190,207,168,113,7,182,121,4,147,129,91,246,124,104,213,173,38,153,255,194,180,114,56,56,161,61,164,194,113,27,205,86,243,95,41,150,205,240,206,142,239,227,61,228,167,35,221,118,218,220,161,181,84,38,193,21,160,67,63,2,115,181,145,10,147,27,109,10,225,158,92,198,93,247,35,121,187,173,209,15,13,248,179,213,125,137,254,231,232,104,221,141,122,6,39,124,5,148,109,123,98,249,76,79,156,241,108,237,55,247,239,55,117,115,9,119,85,154,159,4,169,104,70,74,151,233,244,233,166,231,213,94,217,122,71,21,201,12,125,175,223,43,207,56,194,55,214,171,127,153,136,150,130,163,57,3,223,246,87,200,147,175,185,184,223,155,141,5,28,156,208,138,174,247,164,235,231,224,0,67,132,152,243,237,239,206,37,180,99,101,226,181,3,205,224,108,73,189,133,243,107,120,205,119,173,194,193,213,78,172,151,163,188,135,167,127,191,222,30,153,241,250,15,60,199,95,51,83,11,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("4d9af4c8-f92c-4ec5-87df-9b4421fd7bc3"));
		}

		#endregion

	}

	#endregion

}

