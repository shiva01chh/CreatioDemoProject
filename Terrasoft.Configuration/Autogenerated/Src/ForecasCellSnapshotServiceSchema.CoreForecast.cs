namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: ForecasCellSnapshotServiceSchema

	/// <exclude/>
	public class ForecasCellSnapshotServiceSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ForecasCellSnapshotServiceSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ForecasCellSnapshotServiceSchema(ForecasCellSnapshotServiceSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("0a4e18d5-1a74-0dac-6ca8-5600330c0b01");
			Name = "ForecasCellSnapshotService";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("e0b9d996-6f7e-4520-a678-da960c79be39");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,3,181,87,81,111,219,54,16,126,118,129,254,135,155,7,20,50,96,40,192,30,235,216,69,230,212,173,129,174,11,230,45,47,195,80,48,210,201,22,38,83,30,73,185,48,82,255,247,29,69,82,162,100,73,94,176,45,15,142,120,188,59,30,191,239,238,72,114,182,71,121,96,17,194,175,40,4,147,121,162,194,101,206,147,116,91,8,166,210,156,135,171,92,96,196,164,122,252,225,245,171,231,215,175,70,133,76,249,22,54,39,169,112,79,170,89,134,145,214,147,225,7,228,40,210,104,214,214,249,148,242,191,106,161,191,204,126,159,243,238,25,129,125,242,112,197,34,149,139,20,37,105,144,206,247,2,183,180,60,44,51,38,229,91,176,209,46,49,203,222,115,149,170,211,134,179,131,220,229,106,131,226,152,70,88,218,220,220,220,192,173,44,246,123,38,78,11,59,182,243,144,228,2,36,59,234,133,165,53,45,101,137,133,1,34,114,45,67,231,229,198,115,243,251,61,38,172,200,212,143,41,143,201,62,80,167,3,230,73,176,118,8,118,6,52,153,194,103,226,0,230,48,214,65,203,241,228,15,114,117,40,158,178,52,130,72,111,202,223,83,203,24,222,194,176,119,114,245,92,110,185,194,105,149,98,22,19,80,15,34,61,50,101,240,24,29,204,0,214,31,80,57,127,122,185,95,240,144,203,148,224,62,193,23,130,189,96,158,100,214,48,92,115,137,162,215,118,151,74,205,89,196,50,163,215,231,101,96,249,218,69,159,177,179,220,24,70,40,53,139,61,95,178,44,42,50,70,218,240,69,118,79,204,44,64,200,99,131,145,197,196,80,208,15,126,240,27,109,133,106,133,155,2,128,162,49,156,128,46,150,209,168,165,52,111,169,149,91,56,55,41,122,16,249,129,64,162,20,215,52,229,138,52,49,118,68,217,33,180,252,182,134,207,176,69,53,3,169,127,206,109,211,10,40,187,159,123,166,24,184,65,151,105,27,154,206,64,75,184,218,75,93,37,165,79,110,192,163,72,236,215,72,160,42,4,239,37,17,222,189,51,122,163,160,87,101,110,154,132,105,32,39,234,87,234,246,90,124,139,96,50,41,41,210,28,209,175,172,3,26,88,230,200,178,2,61,179,115,35,163,6,178,252,174,172,177,178,15,120,210,94,44,218,37,73,32,64,112,41,237,218,119,111,12,139,96,108,162,24,79,45,160,28,191,2,165,150,84,162,208,14,238,196,182,216,35,87,193,184,153,201,227,105,43,9,39,29,208,117,196,236,224,130,151,65,245,177,234,7,164,115,21,177,52,33,96,186,90,8,204,231,192,139,44,115,229,74,188,118,171,189,16,67,19,222,169,2,241,95,160,56,171,18,187,51,50,38,97,237,138,119,18,110,176,81,214,65,53,99,189,156,155,25,212,219,85,155,164,245,64,50,64,220,224,121,240,177,117,28,188,148,190,246,33,50,72,226,165,114,7,149,67,225,254,255,108,94,132,248,31,113,218,121,216,246,49,219,129,83,7,191,125,71,193,79,168,118,121,239,189,66,3,74,55,15,30,235,143,96,253,158,19,90,130,61,101,120,171,5,11,168,163,40,83,97,106,12,88,213,13,29,177,118,139,45,245,112,149,10,169,126,22,246,250,21,232,27,26,204,23,6,21,61,8,31,232,98,154,199,235,88,39,74,237,181,22,191,121,227,41,155,134,126,161,92,137,27,202,230,214,117,161,236,196,19,255,124,119,104,220,167,73,98,55,78,201,167,71,29,144,212,206,8,142,171,136,57,128,142,76,64,180,99,124,139,37,212,146,72,212,169,250,137,180,141,97,96,147,70,95,103,89,180,131,160,133,52,164,220,95,186,170,168,167,60,207,156,103,114,154,176,76,218,19,174,92,211,132,115,42,61,204,107,166,47,120,245,40,157,213,165,221,176,110,151,114,211,117,237,192,21,82,29,20,21,35,54,75,162,158,115,95,223,190,249,177,134,143,58,195,225,187,6,119,143,245,233,93,70,103,77,235,136,124,128,195,187,56,14,46,119,117,246,42,77,227,19,19,201,150,11,143,125,235,112,73,84,40,63,202,210,179,241,48,243,243,94,123,153,189,168,24,189,75,89,251,209,99,94,61,236,136,178,245,182,169,223,61,121,82,46,137,2,57,189,53,158,80,125,69,116,233,1,140,199,144,105,163,74,189,122,25,93,62,141,140,228,192,4,219,3,167,231,206,124,236,172,198,139,234,230,185,71,197,98,106,112,225,237,77,169,217,109,152,164,153,66,49,94,172,202,255,16,53,30,171,190,165,61,138,142,121,26,151,251,116,235,4,157,247,95,23,207,20,140,99,243,8,6,179,154,227,222,41,133,203,29,70,127,186,174,255,153,242,53,208,193,209,99,207,105,184,70,95,89,108,118,136,255,192,206,232,57,235,10,154,121,21,223,172,202,41,169,53,189,25,99,90,207,71,182,1,116,94,42,67,119,107,10,74,55,83,183,209,218,188,85,187,228,104,232,202,117,221,159,206,36,231,201,181,189,200,116,133,118,51,51,70,87,110,9,161,39,117,139,86,107,132,182,166,38,3,229,98,164,77,97,41,243,255,254,6,94,79,107,129,32,17,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("0a4e18d5-1a74-0dac-6ca8-5600330c0b01"));
		}

		#endregion

	}

	#endregion

}

