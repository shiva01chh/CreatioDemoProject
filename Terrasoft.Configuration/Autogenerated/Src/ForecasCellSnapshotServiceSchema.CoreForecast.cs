namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: ForecasCellSnapshotServiceSchema

	/// <exclude/>
	public class ForecasCellSnapshotServiceSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ForecasCellSnapshotServiceSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ForecasCellSnapshotServiceSchema(ForecasCellSnapshotServiceSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("0a4e18d5-1a74-0dac-6ca8-5600330c0b01");
			Name = "ForecasCellSnapshotService";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("e0b9d996-6f7e-4520-a678-da960c79be39");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,3,181,87,109,143,219,54,12,254,156,2,253,15,92,6,20,14,16,248,128,125,108,46,41,110,185,166,13,208,117,135,101,187,47,195,80,232,108,58,49,230,200,153,36,167,8,174,249,239,163,222,252,22,219,217,97,219,125,200,89,20,73,81,207,67,82,18,103,123,148,7,22,33,252,138,66,48,153,39,42,92,230,60,73,183,133,96,42,205,121,184,202,5,70,76,170,199,31,94,191,122,126,253,106,84,200,148,111,97,115,146,10,247,164,154,101,24,105,61,25,126,64,142,34,141,102,109,157,79,41,255,171,18,214,151,217,239,115,222,61,35,176,79,30,174,88,164,114,145,162,36,13,210,249,94,224,150,150,135,101,198,164,124,11,46,218,37,102,217,123,174,82,117,218,112,118,144,187,92,109,80,28,211,8,141,205,205,205,13,220,202,98,191,103,226,180,112,99,55,15,73,46,64,178,163,94,88,58,83,35,75,28,12,16,145,107,25,122,47,55,53,55,191,223,99,194,138,76,253,152,242,152,236,3,117,58,96,158,4,107,143,96,103,64,147,41,124,38,14,96,14,99,29,180,28,79,254,32,87,135,226,41,75,35,136,244,166,234,123,106,25,195,91,24,246,78,174,158,205,150,75,156,86,41,102,49,1,245,32,210,35,83,22,143,209,193,14,96,253,1,149,247,167,151,251,5,15,185,76,9,238,19,124,33,216,11,86,147,204,26,134,107,46,81,244,218,238,82,169,57,139,88,102,245,250,188,12,44,95,185,232,51,246,150,27,203,8,165,102,177,231,75,150,69,69,198,72,27,190,200,238,137,153,3,8,121,108,49,114,152,88,10,250,193,15,126,163,173,80,173,112,91,0,80,52,134,19,208,197,50,26,181,148,230,45,53,179,133,115,147,162,7,145,31,8,36,74,113,77,83,174,72,19,99,79,148,27,66,203,111,107,248,12,91,84,51,144,250,231,220,54,45,129,114,251,185,103,138,129,31,116,153,182,161,233,12,212,192,213,94,234,42,41,125,114,11,30,69,226,190,70,2,85,33,120,47,137,240,238,157,213,27,5,189,42,115,219,36,108,3,57,81,191,82,183,215,226,91,4,147,137,161,72,115,68,191,178,10,104,96,153,35,203,10,172,153,157,27,25,53,144,229,119,166,198,76,31,168,73,123,177,104,151,36,129,0,193,165,180,107,223,189,49,44,130,177,141,98,60,117,128,114,252,10,148,90,82,137,66,59,184,19,219,98,143,92,5,227,102,38,143,167,173,36,156,116,64,215,17,179,135,11,94,6,213,199,178,31,144,206,85,196,210,132,128,233,106,33,48,159,3,47,178,204,151,43,241,218,173,246,66,12,109,120,167,18,196,127,129,226,172,76,236,206,200,152,132,181,47,222,73,184,193,70,89,7,229,140,243,114,110,102,80,111,87,109,146,214,3,201,0,113,131,231,193,199,214,113,240,82,250,218,135,200,32,137,151,202,29,84,14,133,251,255,179,121,17,226,127,196,105,231,97,219,199,108,7,78,29,252,246,29,5,63,161,218,229,189,247,10,13,40,221,60,120,172,63,130,245,123,78,104,9,246,148,225,173,22,44,160,138,194,164,194,212,26,176,178,27,122,98,221,22,91,234,225,42,21,82,253,44,220,245,43,208,55,52,152,47,44,42,122,16,62,208,197,52,143,215,177,78,148,202,107,37,126,243,166,166,108,27,250,133,114,41,110,40,219,91,215,133,178,23,79,234,231,187,71,227,62,77,18,183,113,74,62,61,234,128,164,114,70,112,92,69,204,3,116,100,2,162,29,227,91,52,80,75,34,81,167,234,39,210,182,134,129,75,26,125,157,101,209,14,130,22,210,144,242,250,210,101,69,61,229,121,230,61,147,211,132,101,210,157,112,102,77,27,206,201,120,152,87,76,95,240,90,163,116,86,149,118,195,186,93,202,77,215,149,3,95,72,85,80,84,140,216,44,137,106,206,127,125,251,86,143,53,124,212,25,14,223,53,184,123,172,78,111,19,157,51,173,34,170,3,28,222,197,113,112,185,171,115,173,210,52,62,49,145,236,184,168,177,239,28,46,137,10,85,143,210,120,182,30,102,245,188,215,94,102,47,42,198,218,165,172,253,232,177,175,30,118,68,217,122,219,84,239,158,60,49,75,162,64,78,111,141,39,84,95,17,125,122,0,227,49,100,218,168,84,47,95,70,151,79,35,43,57,48,193,246,192,233,185,51,31,123,171,241,162,188,121,238,81,177,152,26,92,120,123,99,52,187,13,147,52,83,40,198,139,149,249,15,81,227,177,90,183,116,71,209,49,79,99,179,79,191,78,208,121,255,245,241,76,193,58,182,143,96,176,171,121,238,189,82,184,220,97,244,167,239,250,159,41,95,3,29,28,61,246,188,134,111,244,165,197,102,135,248,15,236,172,158,183,46,161,153,151,241,205,202,156,146,90,179,54,99,77,171,249,200,53,128,206,75,101,232,111,77,129,113,51,245,27,173,204,91,181,75,142,134,174,92,215,253,233,76,242,158,124,219,139,108,87,104,55,51,107,116,229,150,16,214,164,126,209,114,141,208,213,212,100,160,92,172,180,41,52,50,250,251,27,119,61,83,33,23,17,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("0a4e18d5-1a74-0dac-6ca8-5600330c0b01"));
		}

		#endregion

	}

	#endregion

}

