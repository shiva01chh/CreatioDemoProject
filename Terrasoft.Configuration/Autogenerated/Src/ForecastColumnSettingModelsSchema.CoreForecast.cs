namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: ForecastColumnSettingModelsSchema

	/// <exclude/>
	public class ForecastColumnSettingModelsSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ForecastColumnSettingModelsSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ForecastColumnSettingModelsSchema(ForecastColumnSettingModelsSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("caf2a486-8320-4af0-9da3-4fa7ddc482cf");
			Name = "ForecastColumnSettingModels";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("e0b9d996-6f7e-4520-a678-da960c79be39");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,3,173,87,77,111,26,49,16,189,71,202,127,24,165,151,246,2,82,143,37,202,161,73,160,244,208,34,40,92,162,30,204,122,150,184,242,218,212,31,169,80,148,255,222,241,122,9,203,55,152,229,2,242,190,55,243,230,141,103,51,81,172,64,59,103,25,194,47,52,134,89,157,187,214,189,86,185,152,121,195,156,208,170,213,213,6,51,102,221,228,243,245,213,235,245,21,208,199,91,161,102,48,90,88,135,69,103,251,136,2,72,137,89,96,219,86,15,21,26,145,173,193,126,224,63,71,207,66,174,239,86,43,122,22,159,126,48,56,35,18,220,75,102,237,23,248,202,44,82,40,95,168,17,58,71,196,37,174,221,110,195,173,245,69,193,204,226,110,117,20,240,144,5,46,228,218,0,147,18,178,146,14,54,242,91,53,122,123,157,63,247,83,41,178,138,189,35,113,192,84,213,239,81,176,60,126,192,92,40,180,240,34,172,152,10,41,220,2,116,14,185,97,165,33,76,194,156,25,23,142,42,109,47,76,122,108,109,132,110,111,199,126,10,86,13,140,158,163,113,139,143,55,194,118,223,67,14,40,226,55,193,57,170,155,79,191,87,140,170,166,169,214,18,250,59,225,240,10,51,116,157,224,79,7,222,34,243,237,189,27,168,120,108,200,158,254,156,211,155,33,206,13,90,84,206,110,244,196,30,111,74,48,76,144,113,177,57,107,89,119,94,146,211,123,53,86,226,175,71,16,100,133,19,185,64,83,246,133,201,204,75,230,144,67,56,118,139,243,155,99,181,55,25,142,251,124,87,63,122,94,112,24,45,17,155,45,72,215,109,48,71,131,138,70,57,58,124,190,108,138,16,173,60,32,124,184,194,36,73,239,33,93,1,154,78,27,190,221,51,110,201,166,118,187,231,11,180,15,136,190,75,189,117,38,188,123,134,117,92,115,230,147,10,161,121,178,243,145,126,212,252,193,26,44,73,125,89,118,179,130,143,56,62,216,128,38,201,238,10,233,200,105,206,28,131,63,164,164,10,126,190,240,188,12,116,64,110,204,244,16,18,53,118,59,106,175,148,220,171,242,53,156,236,124,8,112,244,162,116,107,160,102,198,116,67,119,226,148,174,196,31,185,52,221,53,96,82,9,247,149,233,65,116,77,61,79,248,99,27,101,115,60,42,152,99,51,110,83,222,140,46,16,4,1,177,130,242,151,226,73,147,26,66,253,140,252,195,115,90,3,94,182,26,208,210,88,144,247,167,237,6,21,248,220,45,109,61,199,133,155,192,246,125,175,68,37,174,103,37,109,151,217,253,71,229,11,114,120,42,241,182,170,160,79,59,243,29,76,2,227,242,219,83,65,46,213,95,1,38,251,202,216,95,199,168,198,108,102,24,188,93,181,67,168,85,133,146,37,188,255,41,88,95,85,26,247,110,203,227,26,232,178,65,120,228,194,5,143,78,155,132,37,250,252,29,57,142,196,70,182,38,103,66,88,152,25,237,231,128,148,35,209,123,97,123,33,68,80,121,224,31,149,119,204,201,206,211,97,248,252,7,81,205,204,232,204,14,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("caf2a486-8320-4af0-9da3-4fa7ddc482cf"));
		}

		#endregion

	}

	#endregion

}

