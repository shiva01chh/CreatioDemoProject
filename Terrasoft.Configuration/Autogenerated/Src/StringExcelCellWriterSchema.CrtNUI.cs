namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: StringExcelCellWriterSchema

	/// <exclude/>
	public class StringExcelCellWriterSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public StringExcelCellWriterSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public StringExcelCellWriterSchema(StringExcelCellWriterSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("052444f1-9b26-428f-bf14-859460e74a8d");
			Name = "StringExcelCellWriter";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("6ba26f98-9709-4408-98d0-761f0c4bf2aa");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,3,149,85,93,111,211,48,20,125,238,164,253,7,83,94,82,169,184,3,36,134,88,87,105,43,221,152,52,196,180,149,15,9,120,112,147,187,214,200,177,131,125,179,181,66,251,239,92,199,73,151,38,237,16,149,210,54,215,231,220,47,159,107,107,145,130,203,68,12,108,10,214,10,103,110,145,143,141,190,149,243,220,10,148,70,243,201,50,51,22,167,102,178,140,65,237,239,253,217,223,235,228,78,234,57,187,89,57,132,148,208,74,65,236,161,142,159,131,6,43,227,163,38,230,82,234,223,45,227,20,150,200,175,97,158,43,97,41,136,5,231,188,147,22,238,91,170,30,109,239,77,156,167,160,241,204,216,84,32,255,148,129,222,88,175,87,145,166,70,211,10,173,61,183,48,39,223,108,172,132,115,239,216,13,90,194,22,5,141,65,169,175,86,34,216,2,56,24,12,216,208,229,105,42,236,106,84,190,7,52,3,15,103,244,40,118,95,16,120,133,31,212,8,89,62,83,50,102,177,15,180,61,14,123,199,78,133,131,86,244,206,159,34,131,117,174,87,214,100,96,81,2,37,76,255,145,122,12,73,128,100,213,43,115,33,183,178,13,211,85,6,83,49,63,65,178,206,114,4,118,60,98,93,236,30,61,205,10,89,122,238,38,145,80,109,170,212,200,62,138,165,79,124,188,16,86,144,209,186,177,201,201,76,156,215,175,14,223,28,150,156,231,160,147,80,74,167,243,68,101,69,191,252,170,127,168,157,67,169,23,164,33,76,76,204,6,163,34,120,104,169,185,163,173,149,9,176,117,231,130,6,90,239,148,71,195,196,67,137,173,196,54,211,250,8,184,48,73,209,109,121,39,16,106,73,109,104,162,48,92,67,74,9,177,5,44,69,2,177,76,133,98,110,149,206,140,114,124,205,25,52,73,195,140,58,150,50,77,51,119,220,197,37,118,71,215,144,41,17,123,65,51,164,113,96,247,18,23,91,157,14,7,5,247,209,149,5,204,173,118,163,105,69,51,57,238,96,86,208,176,147,69,109,149,4,66,25,31,30,105,55,129,21,149,235,148,100,143,249,145,239,116,74,75,38,144,182,92,179,99,214,253,254,99,121,112,240,130,190,222,210,115,74,207,152,158,9,25,94,158,253,244,202,33,82,8,77,97,230,176,228,161,88,136,200,105,191,242,211,47,51,225,147,52,195,85,63,32,63,101,225,56,161,17,206,164,130,164,87,56,123,168,54,100,107,13,23,250,78,40,153,144,158,189,46,183,21,128,118,85,254,235,120,148,209,36,40,228,95,72,108,183,171,53,205,227,67,234,85,238,100,9,134,7,22,11,140,23,149,143,59,97,89,17,178,32,82,63,8,200,191,146,118,33,170,185,191,112,165,235,30,159,154,19,58,155,86,81,195,191,134,251,178,146,232,209,93,137,121,216,168,187,46,220,210,210,150,238,198,65,177,125,158,214,195,188,30,169,178,89,97,90,190,8,149,67,100,102,191,8,228,43,204,161,234,160,188,101,209,179,168,48,49,233,42,86,248,41,88,189,10,217,169,25,169,53,5,133,26,16,230,48,170,87,215,64,254,67,144,33,202,209,22,98,112,253,25,165,146,254,100,225,229,6,124,64,58,22,205,149,18,82,251,73,249,167,155,167,196,84,103,249,86,212,172,252,18,244,156,70,119,180,227,112,220,209,151,186,135,155,124,86,202,224,160,191,203,75,189,111,165,124,106,46,170,41,249,159,157,191,152,104,186,79,173,152,41,24,150,247,193,250,22,24,177,115,192,166,209,69,85,45,126,0,76,115,149,138,154,209,237,198,183,51,73,2,151,210,97,37,128,22,155,159,36,73,228,7,162,201,141,118,220,112,125,166,115,165,250,79,92,101,189,222,198,73,212,10,89,111,90,227,102,8,214,141,169,219,223,35,99,253,243,23,196,206,70,123,64,9,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("052444f1-9b26-428f-bf14-859460e74a8d"));
		}

		#endregion

	}

	#endregion

}

