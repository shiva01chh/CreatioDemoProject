namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: ForecastHistoryExportToExcelServiceSchema

	/// <exclude/>
	public class ForecastHistoryExportToExcelServiceSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ForecastHistoryExportToExcelServiceSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ForecastHistoryExportToExcelServiceSchema(ForecastHistoryExportToExcelServiceSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("2b9a6113-1660-45d2-8131-c707ea7d4a0a");
			Name = "ForecastHistoryExportToExcelService";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("e0b9d996-6f7e-4520-a678-da960c79be39");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,3,173,88,75,111,219,70,16,62,171,64,255,195,64,189,80,128,64,1,61,218,146,12,199,178,83,181,137,227,74,110,46,65,80,172,201,145,180,13,69,42,187,75,203,106,160,255,222,217,7,201,229,67,138,11,196,7,195,59,59,175,253,118,246,155,161,83,182,69,185,99,17,194,35,10,193,100,182,82,225,77,150,174,248,58,23,76,241,44,13,239,50,129,17,147,234,227,175,240,237,231,159,122,185,228,233,26,150,7,169,112,123,217,88,147,101,146,96,164,205,100,248,22,83,20,60,106,233,188,227,233,215,74,120,143,123,69,218,58,236,239,50,75,171,13,63,157,237,246,212,142,159,232,237,203,46,19,234,49,187,125,137,48,233,86,23,120,74,30,222,166,138,43,142,242,164,194,29,139,84,38,78,104,220,231,60,92,162,120,230,17,190,207,98,76,194,25,83,140,210,83,130,172,42,3,146,72,37,97,242,93,176,63,60,253,67,56,126,100,73,142,11,140,50,17,27,75,150,42,47,186,14,97,52,30,15,59,172,249,60,155,77,88,179,171,220,221,241,68,161,248,159,190,42,35,114,68,174,126,17,184,166,115,192,77,194,164,116,46,237,9,205,246,104,52,130,177,204,183,91,38,14,83,183,182,74,16,147,91,136,106,96,20,6,35,207,98,151,63,37,60,130,29,19,138,179,4,162,86,28,93,164,164,215,10,101,99,57,120,41,80,146,111,83,136,216,78,71,50,193,195,210,202,143,87,4,44,44,127,227,146,170,224,160,65,112,168,232,162,39,95,55,214,149,222,248,244,25,90,50,248,6,107,84,151,32,245,175,35,144,231,163,5,12,211,216,98,214,198,239,162,25,181,86,225,46,252,73,92,221,62,172,50,1,104,12,245,45,175,10,4,98,193,147,36,206,246,246,240,160,50,82,34,175,157,160,127,154,225,138,229,137,122,195,211,152,156,4,138,238,59,91,5,243,34,189,174,188,6,67,184,39,110,161,90,234,187,236,251,131,207,213,5,186,139,251,254,249,224,2,206,198,41,238,187,68,78,63,20,145,235,183,10,231,236,172,85,247,237,118,233,7,127,73,83,98,169,229,55,200,107,203,129,225,198,94,175,46,13,111,54,24,125,185,22,235,124,139,169,186,207,147,36,72,9,19,130,174,97,61,184,52,214,141,16,147,70,16,163,116,116,199,173,215,77,121,252,59,142,73,76,149,243,32,248,51,83,197,41,237,2,58,241,251,27,59,164,151,231,163,60,136,108,135,66,211,229,137,72,141,147,52,150,181,183,240,138,20,59,133,19,243,60,123,157,233,195,213,21,4,221,59,19,251,182,44,155,31,168,75,169,113,151,251,105,96,46,229,28,8,239,81,109,178,147,88,91,78,146,64,1,150,168,155,226,159,57,138,131,147,6,243,219,148,106,66,176,167,4,199,111,115,30,79,65,24,154,151,243,184,40,165,103,38,96,229,156,76,32,197,125,233,210,238,247,106,132,93,45,194,121,106,23,67,171,70,237,147,216,146,83,115,173,169,214,197,225,237,215,156,37,206,226,29,174,244,147,17,40,165,45,67,29,252,13,147,232,9,93,14,189,74,228,188,155,62,122,88,70,27,220,50,115,228,186,70,104,119,44,63,186,120,61,187,122,96,106,163,233,98,30,247,173,252,232,246,23,124,189,241,18,210,112,148,104,133,22,220,192,10,230,49,149,197,15,77,247,129,9,122,177,21,154,189,82,224,112,169,214,69,140,94,179,49,215,214,161,190,238,194,89,207,136,203,243,204,99,39,63,58,0,6,225,99,118,77,157,248,16,12,140,228,104,121,66,160,202,69,90,84,135,79,11,69,245,205,184,121,105,196,223,99,98,67,226,236,33,120,85,104,241,158,54,106,211,74,231,52,163,201,160,214,81,87,222,194,175,206,168,50,112,96,188,42,108,224,216,78,187,144,244,240,102,92,148,132,231,135,10,151,180,105,255,188,10,61,165,9,124,16,49,138,82,178,164,72,52,138,92,203,8,77,123,178,216,93,53,180,154,251,23,205,253,25,22,10,54,61,221,41,89,180,129,160,58,42,240,180,158,97,171,205,23,240,244,60,108,194,235,56,14,236,58,212,45,113,104,160,106,225,18,148,182,61,231,144,240,112,102,78,80,148,77,61,243,115,176,249,47,171,244,102,250,242,85,3,251,22,30,247,89,138,195,214,179,113,23,109,253,86,98,47,249,31,67,9,117,78,240,18,111,190,16,123,89,71,255,93,120,216,191,166,101,86,60,110,134,129,51,227,227,13,85,132,66,9,44,141,97,47,184,254,211,12,77,64,197,142,108,171,135,168,36,139,152,94,103,130,173,209,40,186,164,108,51,130,47,120,56,49,104,26,201,78,179,9,232,33,97,210,247,47,181,63,61,61,38,143,71,198,170,219,73,214,252,144,144,253,169,253,184,128,103,195,61,142,73,135,176,223,112,170,246,61,77,133,240,132,46,93,140,219,222,237,121,228,116,44,17,33,18,184,154,244,107,13,116,65,223,147,68,210,216,31,77,173,156,66,88,9,249,42,140,189,217,171,211,88,83,83,109,227,15,60,156,38,165,33,248,253,180,245,237,52,133,54,10,69,189,214,134,129,5,234,9,119,60,95,224,46,147,92,139,198,75,125,147,228,117,105,110,216,86,242,148,88,205,44,23,24,115,89,41,47,49,202,169,42,14,51,29,130,145,164,70,117,182,42,11,166,108,61,127,106,235,80,80,233,105,94,174,83,241,241,18,58,70,133,238,137,163,13,65,209,58,95,116,207,124,9,105,242,240,137,185,242,208,206,184,120,235,139,44,83,246,241,186,81,223,126,223,134,141,113,154,46,196,139,91,25,148,3,74,1,140,131,104,232,207,55,178,164,55,217,209,2,187,70,183,240,65,32,213,44,218,189,64,255,91,129,242,122,166,121,85,127,200,210,87,35,255,23,109,141,4,222,41,221,225,187,185,162,235,91,205,200,252,159,255,0,240,213,52,77,75,17,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("2b9a6113-1660-45d2-8131-c707ea7d4a0a"));
		}

		#endregion

	}

	#endregion

}

