namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: ImportStageFactorySchema

	/// <exclude/>
	public class ImportStageFactorySchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ImportStageFactorySchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ImportStageFactorySchema(ImportStageFactorySchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("0d595c49-6a8f-46db-af6c-6f4c033b5921");
			Name = "ImportStageFactory";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("b51eda84-5cfb-4f7f-b7eb-7f869b20e7e8");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,3,141,85,77,111,219,48,12,61,167,64,255,3,151,93,108,32,72,238,203,7,144,166,201,16,12,43,10,164,59,21,197,160,217,180,35,192,150,12,73,110,23,4,249,239,163,100,39,245,231,18,95,12,83,143,124,228,35,69,11,150,162,206,88,128,240,130,74,49,45,35,51,94,73,17,241,56,87,204,112,41,198,27,158,224,54,205,164,50,247,119,199,251,187,65,174,185,136,97,119,208,6,83,130,38,9,6,22,167,199,223,81,160,226,193,244,130,169,70,84,216,103,31,111,88,96,164,226,168,9,65,152,175,10,99,138,7,176,74,152,214,223,160,224,222,25,22,99,129,60,56,216,100,50,129,25,23,123,162,52,161,12,32,80,24,205,135,219,54,122,56,89,156,225,58,79,83,166,14,231,111,194,38,152,162,48,26,184,48,168,34,43,195,76,35,222,20,108,82,137,246,250,136,17,203,19,243,192,69,72,21,122,230,144,161,140,188,142,0,254,8,158,72,114,152,131,160,151,197,180,33,254,27,133,204,242,63,9,167,178,172,8,29,26,0,9,211,165,204,224,232,212,185,168,184,225,152,132,164,226,179,226,239,204,96,113,152,21,31,160,144,133,82,36,7,120,228,174,135,84,205,236,179,221,46,176,94,139,60,29,129,54,138,234,90,192,111,237,140,211,146,4,69,88,240,212,73,105,128,200,33,183,41,89,106,87,73,129,104,182,193,25,86,148,7,101,195,201,137,9,106,129,140,106,93,232,105,66,187,11,103,205,218,30,158,15,243,75,242,86,123,252,184,189,102,59,244,244,28,161,11,54,126,86,152,49,133,141,179,209,185,189,221,199,62,156,70,87,162,202,0,181,166,235,149,167,66,247,7,255,15,234,86,142,181,48,220,208,237,187,66,210,3,243,175,144,172,164,189,100,166,87,159,158,115,74,222,134,61,93,25,180,159,104,246,50,236,154,177,219,55,195,101,106,30,152,110,166,81,142,102,197,226,117,85,9,188,90,217,47,141,138,110,128,40,246,34,228,181,207,17,108,203,118,45,227,152,170,96,148,200,50,100,25,173,31,8,138,131,82,112,169,252,114,244,120,4,222,151,114,120,237,114,54,140,174,202,15,60,120,21,90,255,12,30,152,189,146,31,110,194,9,242,36,205,70,230,34,92,255,13,48,179,252,85,159,241,139,220,185,25,247,124,127,234,156,157,232,131,119,166,192,177,189,208,26,43,183,85,73,255,90,113,127,155,94,208,245,26,151,42,46,239,88,101,17,144,49,183,187,214,27,214,193,195,81,195,219,255,12,219,20,228,74,224,38,156,66,183,36,45,130,43,52,185,18,197,31,166,28,6,250,125,153,89,215,12,44,188,154,22,205,116,137,190,77,67,198,130,233,212,158,223,210,86,31,105,103,179,207,63,93,182,79,90,144,7,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("0d595c49-6a8f-46db-af6c-6f4c033b5921"));
		}

		#endregion

	}

	#endregion

}

