namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: DCEnabledStrategiesAnalizationRuleSchema

	/// <exclude/>
	public class DCEnabledStrategiesAnalizationRuleSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public DCEnabledStrategiesAnalizationRuleSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public DCEnabledStrategiesAnalizationRuleSchema(DCEnabledStrategiesAnalizationRuleSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("c0d13a6b-c13b-4508-ac19-81807f584656");
			Name = "DCEnabledStrategiesAnalizationRule";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("748ec229-6875-456a-9dfd-63087e63e63a");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,3,205,87,75,111,219,70,16,62,51,64,254,195,128,189,72,128,75,165,61,218,177,1,87,118,140,2,137,91,196,110,125,8,114,88,81,67,105,17,114,151,216,93,90,150,93,255,247,206,190,40,154,34,253,184,20,245,73,156,157,231,55,179,223,172,5,171,80,215,44,71,184,70,165,152,150,133,201,230,82,20,124,213,40,102,184,20,217,217,86,176,138,231,36,52,40,204,251,119,15,239,223,37,141,230,98,5,87,91,109,176,58,106,191,187,30,170,74,10,58,161,179,159,20,174,200,15,204,75,166,245,33,156,205,207,5,91,148,184,188,50,20,128,142,80,159,10,86,110,239,93,180,175,77,137,206,106,54,155,193,71,221,84,21,83,219,147,240,29,44,182,160,80,203,242,22,21,40,82,7,179,102,6,152,245,161,81,211,23,130,54,164,7,178,24,10,6,218,101,13,26,141,161,164,179,24,107,214,9,86,55,139,146,231,144,219,140,95,145,48,216,170,98,114,95,67,110,190,146,228,193,85,211,130,112,46,154,138,64,248,83,73,131,185,193,165,63,237,23,235,4,33,42,37,186,170,8,120,23,141,42,139,57,100,173,97,55,243,228,219,167,146,173,244,119,251,179,142,65,0,41,234,32,22,182,151,73,114,41,5,194,49,124,56,112,95,23,74,54,181,109,231,49,252,226,37,212,205,5,23,94,244,171,149,60,134,162,80,44,125,93,79,139,164,81,161,60,155,220,72,101,107,117,96,62,83,104,71,29,140,132,90,97,205,20,2,129,111,32,95,51,46,64,200,37,194,134,155,181,108,168,211,32,240,206,248,214,47,232,219,202,97,137,5,107,74,179,139,129,8,185,194,226,56,165,206,116,0,140,93,250,141,105,76,103,39,192,41,52,19,57,142,160,233,36,148,13,171,128,46,1,30,167,185,189,5,119,38,61,57,21,173,173,29,180,209,128,243,96,64,177,220,56,101,31,103,206,223,176,251,80,70,204,50,61,185,225,101,9,11,164,137,55,141,18,212,74,94,16,26,113,12,182,160,107,204,121,193,113,249,196,111,152,223,151,39,119,50,152,44,132,42,125,247,147,113,4,161,151,239,148,110,194,130,228,147,232,96,95,225,161,51,63,111,153,134,10,151,156,134,184,55,15,238,182,183,227,240,63,105,162,205,199,130,187,235,30,221,196,28,181,254,175,219,55,194,74,16,19,156,250,254,246,123,214,30,63,105,214,216,101,39,42,171,81,25,74,238,117,180,246,187,200,203,102,73,220,83,88,162,178,176,135,25,1,221,212,181,84,230,205,148,183,227,185,33,138,59,243,222,247,15,142,157,113,50,96,147,181,20,248,207,144,203,172,229,195,163,231,161,249,130,196,88,75,135,11,191,37,99,127,90,251,143,193,100,47,112,63,209,73,232,67,114,203,20,49,121,239,244,111,86,54,150,188,231,82,97,111,113,211,122,190,242,75,142,42,66,227,52,39,97,70,178,191,52,42,250,45,8,56,210,13,55,61,29,200,41,61,128,9,23,102,58,134,227,244,200,217,122,130,130,201,128,135,233,112,210,71,157,225,138,152,80,175,45,236,148,237,231,252,254,202,125,248,180,195,65,153,223,95,210,29,139,136,68,169,204,89,201,239,109,16,111,99,117,8,19,127,156,125,146,170,98,102,146,126,238,171,233,236,225,195,99,230,2,80,149,209,247,81,11,246,158,95,242,41,112,3,123,142,70,80,205,110,164,250,225,30,87,153,189,127,141,202,73,95,42,182,194,128,183,229,11,89,12,97,214,187,232,211,131,225,34,67,178,1,135,219,48,11,123,170,217,14,240,132,24,104,18,20,169,154,166,44,35,152,201,184,57,245,99,78,189,111,20,250,110,92,160,64,197,202,94,81,25,141,72,80,59,128,130,149,58,166,247,216,157,144,219,126,239,95,190,61,47,62,32,214,152,255,208,176,89,243,124,61,198,29,96,151,72,24,196,150,71,110,214,40,220,10,145,162,220,130,125,5,181,204,204,245,142,156,195,246,213,192,205,83,83,162,114,140,175,180,93,164,159,201,165,146,27,255,20,197,187,28,107,55,12,209,242,15,18,171,13,167,237,73,48,151,218,175,47,251,124,229,190,223,110,149,141,113,157,147,132,116,94,189,190,250,143,30,218,172,29,93,59,3,36,165,13,20,253,182,129,218,228,131,234,121,252,78,79,174,125,137,27,130,225,48,234,95,202,65,244,29,152,125,232,175,9,4,180,7,141,216,241,126,110,247,122,33,213,0,170,89,103,49,74,90,100,138,47,45,133,142,190,76,104,100,227,247,105,93,147,149,117,120,45,221,214,124,150,80,233,2,12,179,240,142,23,232,63,38,77,243,238,53,123,68,149,94,202,61,219,115,165,164,250,226,141,210,120,101,233,249,66,211,58,217,139,223,94,199,220,150,49,180,126,236,115,253,208,235,36,110,210,28,41,181,189,153,132,244,66,160,113,63,113,203,69,95,225,130,90,103,103,243,120,24,65,140,20,247,162,215,118,57,14,186,109,79,223,236,247,181,59,185,31,150,166,59,184,14,239,140,215,67,247,56,206,82,94,250,84,232,100,221,191,127,1,152,107,144,189,92,15,0,0 };
		}

		protected override void InitializeLocalizableStrings() {
			base.InitializeLocalizableStrings();
			SetLocalizableStringsDefInheritance();
			LocalizableStrings.Add(CreateNoEnabledStrategiesErrorMessageLocalizableString());
		}

		protected virtual SchemaLocalizableString CreateNoEnabledStrategiesErrorMessageLocalizableString() {
			SchemaLocalizableString localizableString = new SchemaLocalizableString() {
				UId = new Guid("542c751e-6e66-4180-b1f9-e65e7639c0ef"),
				Name = "NoEnabledStrategiesErrorMessage",
				CreatedInPackageId = new Guid("748ec229-6875-456a-9dfd-63087e63e63a"),
				CreatedInSchemaUId = new Guid("c0d13a6b-c13b-4508-ac19-81807f584656"),
				ModifiedInSchemaUId = new Guid("c0d13a6b-c13b-4508-ac19-81807f584656")
			};
			return localizableString;
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("c0d13a6b-c13b-4508-ac19-81807f584656"));
		}

		#endregion

	}

	#endregion

}

