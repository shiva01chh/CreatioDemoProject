namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: ProcessInfoServiceSchema

	/// <exclude/>
	public class ProcessInfoServiceSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ProcessInfoServiceSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ProcessInfoServiceSchema(ProcessInfoServiceSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("b6b00b4a-03a0-421e-819a-e3f6b7de89e5");
			Name = "ProcessInfoService";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("ee75749b-5184-4f75-a3ec-dd2e096c705e");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,3,149,84,219,78,27,49,16,125,94,36,254,193,162,47,139,20,237,7,4,85,21,151,130,82,41,16,37,32,30,16,15,142,119,146,88,221,181,183,246,108,218,20,241,239,29,175,189,187,6,18,146,70,74,20,159,57,115,59,158,49,83,188,4,91,113,1,236,30,140,225,86,47,48,187,212,106,33,151,181,225,40,181,202,110,31,70,199,71,236,229,248,40,169,173,84,75,54,219,88,132,242,236,221,57,155,214,10,101,9,217,12,140,228,133,252,219,56,127,96,145,117,45,5,140,117,14,197,167,198,236,92,160,92,239,15,146,61,194,188,39,244,61,16,76,125,148,101,236,190,205,218,6,155,234,26,137,67,100,162,127,49,176,164,196,236,178,224,214,14,217,196,104,1,214,142,212,66,7,118,195,122,10,7,146,11,13,23,248,220,96,182,138,34,66,131,93,193,130,215,5,126,192,207,109,117,11,72,117,84,212,231,92,22,18,55,83,248,85,75,3,37,40,180,105,124,112,205,178,175,108,143,139,99,101,1,200,79,93,146,170,158,23,82,48,225,58,217,210,8,27,178,11,110,161,107,43,121,105,90,235,20,24,3,174,116,238,52,104,226,120,227,211,93,5,126,56,226,214,147,39,82,117,164,214,250,39,164,222,141,234,61,153,220,205,238,79,6,204,213,4,22,175,181,41,57,18,78,212,49,85,194,151,224,161,236,135,213,106,192,46,116,190,153,225,166,128,55,148,14,205,30,13,175,42,200,7,46,93,50,165,193,213,202,194,231,65,27,21,90,25,130,0,143,18,87,19,110,104,244,17,140,83,163,13,197,110,0,183,113,26,201,210,155,90,230,172,242,230,135,81,62,96,30,104,73,4,157,54,123,146,36,104,54,225,95,178,230,134,89,177,130,146,83,133,15,22,12,105,166,64,52,171,21,82,205,26,243,152,43,170,220,100,215,82,229,35,101,145,43,1,23,27,10,154,246,41,79,207,250,160,93,94,138,235,19,124,203,250,130,51,234,36,120,199,245,5,127,3,88,27,197,20,252,222,43,73,218,198,190,37,219,160,207,234,129,16,240,149,9,142,98,197,210,239,127,4,84,174,55,6,173,22,255,149,172,11,232,126,95,195,44,130,202,253,56,186,19,125,61,30,195,59,119,118,103,38,191,193,87,28,121,60,195,219,182,101,247,176,12,217,155,151,178,221,239,46,67,242,18,10,238,138,115,14,22,77,141,218,12,89,21,173,212,129,243,153,146,179,123,201,194,68,248,43,105,177,214,161,185,23,42,110,78,139,157,182,183,48,233,61,104,94,34,127,175,247,36,118,118,132,248,124,22,93,198,161,133,198,131,208,100,8,245,184,177,216,117,175,157,76,20,157,94,24,148,240,254,225,113,247,53,134,114,14,38,222,234,32,192,228,77,83,7,240,223,245,248,161,166,109,115,198,8,116,159,127,97,203,140,179,57,7,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("b6b00b4a-03a0-421e-819a-e3f6b7de89e5"));
		}

		#endregion

	}

	#endregion

}

