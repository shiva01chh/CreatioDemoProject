namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: ForecastColumnsMigrationSchema

	/// <exclude/>
	public class ForecastColumnsMigrationSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ForecastColumnsMigrationSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ForecastColumnsMigrationSchema(ForecastColumnsMigrationSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("6ee08079-d32e-4c13-8060-f6c336735fc6");
			Name = "ForecastColumnsMigration";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("e0b9d996-6f7e-4520-a678-da960c79be39");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,3,189,87,205,111,219,54,20,63,171,64,255,7,214,189,200,131,161,67,143,109,236,34,241,226,192,67,211,110,85,218,75,209,3,35,61,219,26,36,202,35,41,23,94,144,255,125,143,228,163,76,73,182,211,5,216,114,136,192,199,247,241,123,223,180,224,21,168,45,207,128,221,129,148,92,213,43,157,204,107,177,42,214,141,228,186,168,69,178,168,37,100,92,233,175,111,94,190,120,120,249,34,106,84,33,214,236,35,252,208,181,176,236,191,169,90,188,107,47,210,189,210,80,245,207,168,179,44,33,51,10,85,114,3,2,100,145,13,120,62,20,226,175,3,49,196,83,85,161,137,240,70,194,41,122,114,45,116,161,11,80,200,128,44,175,37,172,209,58,155,151,92,169,183,204,123,133,184,154,74,168,219,98,237,220,181,188,219,230,190,44,50,166,52,146,50,150,25,137,51,2,145,137,74,171,255,22,244,166,206,209,194,239,178,216,113,13,86,97,180,117,7,175,18,149,85,77,201,151,232,53,251,180,5,113,37,49,3,241,152,89,77,145,4,221,72,193,4,252,232,48,186,203,232,110,191,5,54,13,111,12,37,65,53,146,139,124,226,152,230,124,107,192,33,223,40,30,17,237,43,47,27,8,41,143,38,116,209,227,147,8,231,101,173,32,255,47,49,142,7,24,199,255,14,227,183,239,236,170,41,202,60,253,114,155,66,185,162,155,184,155,52,150,217,207,17,23,80,156,144,159,112,232,148,71,139,70,216,162,38,248,161,79,8,197,123,117,112,43,32,62,210,55,200,255,228,89,24,156,115,67,4,206,219,228,35,118,120,31,7,93,45,243,228,174,78,181,196,230,105,141,123,88,157,164,63,47,23,77,117,89,150,65,42,204,55,5,173,77,175,42,247,85,62,25,59,46,217,142,208,249,187,196,194,181,70,163,98,197,98,186,159,50,209,148,165,23,60,81,137,223,190,63,56,184,6,47,233,87,77,85,113,185,247,65,48,18,31,10,165,47,2,177,153,51,130,49,109,132,198,98,255,133,189,25,59,53,43,44,37,158,109,88,28,102,166,176,255,132,67,222,34,50,88,205,77,98,19,246,234,84,198,90,254,40,4,150,92,230,185,149,38,187,81,148,213,56,200,132,15,4,249,51,148,249,31,43,215,67,27,96,8,106,249,36,79,232,219,224,178,83,117,227,48,129,148,230,142,196,93,125,137,19,127,31,143,207,20,230,125,93,151,108,169,200,125,23,249,159,154,11,212,35,38,88,203,220,84,221,83,11,18,169,74,171,164,99,201,73,63,5,47,221,212,77,153,187,149,2,7,136,231,250,197,135,195,183,74,218,169,109,215,34,103,204,238,234,34,199,13,85,103,160,84,186,1,240,107,45,182,202,191,40,144,232,141,112,11,155,53,157,227,132,217,197,186,79,179,13,84,156,194,228,14,19,182,188,22,77,133,67,254,190,132,139,110,144,103,196,169,198,198,196,195,160,167,134,249,48,141,229,101,194,214,122,213,207,38,165,111,204,122,157,114,34,132,135,249,119,227,253,38,22,117,209,21,153,197,190,80,173,221,99,105,106,243,50,176,78,19,39,232,59,21,206,54,140,241,82,80,214,168,215,222,31,155,155,173,1,98,122,123,116,209,81,8,124,91,29,175,138,62,156,0,40,14,15,31,3,243,156,67,94,243,193,164,239,64,234,36,197,231,26,47,139,191,225,211,253,159,88,4,7,76,129,6,176,69,209,198,214,21,68,50,199,4,107,112,5,19,119,235,200,11,59,193,100,1,58,219,44,100,93,253,122,21,183,235,169,199,147,250,124,89,135,226,145,135,60,154,244,29,232,11,242,29,196,43,94,42,8,103,10,181,198,107,16,185,123,188,209,121,240,146,179,207,65,234,163,206,211,208,118,239,231,70,180,175,193,248,108,235,132,203,78,217,0,221,114,193,215,32,49,108,93,206,36,236,49,98,122,215,202,82,87,124,134,109,77,123,172,219,64,230,66,21,186,150,39,98,126,208,65,77,60,237,194,73,22,133,200,151,56,205,184,200,224,106,111,94,16,241,168,107,98,20,168,82,102,128,60,67,147,29,60,3,69,127,52,32,247,228,86,24,5,75,143,59,218,39,161,105,251,208,9,148,21,57,77,147,105,160,215,44,25,234,220,209,50,31,216,86,93,102,156,15,14,193,225,215,203,241,128,218,241,224,52,36,151,2,23,210,152,209,128,214,210,15,4,186,70,231,175,113,230,197,246,200,166,51,63,217,90,12,55,13,142,102,130,97,16,152,21,146,7,101,127,97,24,102,177,119,47,116,251,160,132,198,121,219,142,182,86,14,243,78,197,173,41,47,122,108,25,244,7,127,119,214,135,134,124,91,209,183,239,252,145,78,35,90,72,66,74,248,247,15,71,53,91,189,155,14,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("6ee08079-d32e-4c13-8060-f6c336735fc6"));
		}

		#endregion

	}

	#endregion

}

