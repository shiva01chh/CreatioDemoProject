namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: ForecastConstsSchema

	/// <exclude/>
	public class ForecastConstsSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ForecastConstsSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ForecastConstsSchema(ForecastConstsSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("9ddba69f-54ab-463d-85d0-bc0e3119f357");
			Name = "ForecastConsts";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("0db428d0-fc38-40d1-af3f-5cbb75ee95a9");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,3,157,84,203,142,155,48,20,93,55,82,254,1,177,106,23,174,192,64,48,170,102,1,126,84,145,58,109,213,36,221,59,224,201,184,2,19,97,163,54,170,230,223,107,72,152,166,121,13,83,54,182,239,227,28,251,220,35,90,45,213,198,89,236,180,17,213,135,233,100,58,81,188,18,122,203,115,225,44,69,211,112,93,63,152,247,184,86,15,114,211,54,220,200,90,77,39,191,167,147,55,219,118,93,202,220,209,198,198,114,39,47,185,214,14,171,27,145,115,109,108,185,54,218,22,117,133,39,149,141,224,69,173,202,157,35,149,113,238,249,175,175,162,145,117,161,113,221,218,243,157,3,195,254,18,87,187,62,182,178,120,230,161,202,72,179,91,228,143,162,226,171,121,97,219,149,248,217,151,188,117,179,52,72,18,47,65,32,141,160,7,194,212,207,64,146,102,16,64,138,99,154,34,146,196,56,113,223,221,38,211,166,233,196,89,109,11,110,196,64,170,151,245,214,22,221,57,238,73,220,29,5,246,172,17,47,243,133,225,141,17,197,189,208,154,111,68,7,121,33,251,58,216,197,163,16,230,24,169,15,140,195,248,116,32,110,203,126,206,196,62,110,41,171,254,94,87,82,227,112,63,243,61,72,183,142,235,216,155,98,185,219,246,125,127,79,243,87,170,177,55,200,177,28,251,200,255,225,204,21,22,101,121,1,173,143,175,198,130,46,132,49,221,106,113,14,219,23,250,122,207,127,89,255,16,185,249,206,203,86,224,186,108,43,181,215,227,31,207,135,144,176,89,24,80,144,226,16,129,144,206,98,128,88,140,64,4,137,143,50,74,49,243,189,151,60,223,147,209,66,26,190,46,175,51,161,40,245,40,33,24,120,179,192,50,97,18,129,204,39,33,136,25,100,8,50,26,249,33,27,197,100,149,172,172,169,174,18,249,89,232,249,126,12,1,241,49,181,68,113,4,80,20,120,0,71,48,134,89,146,5,16,145,83,162,188,251,253,12,106,95,212,109,112,228,81,210,189,129,113,46,199,0,48,100,110,117,159,61,113,104,62,36,198,76,159,73,197,85,46,190,213,229,217,36,8,161,40,242,50,16,196,9,177,51,143,60,144,36,20,131,108,134,113,232,167,140,65,18,12,2,61,77,39,79,221,230,248,251,3,58,126,36,223,0,6,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("9ddba69f-54ab-463d-85d0-bc0e3119f357"));
		}

		#endregion

	}

	#endregion

}

