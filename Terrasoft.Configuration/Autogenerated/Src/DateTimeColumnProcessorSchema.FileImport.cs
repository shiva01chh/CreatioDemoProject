namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: DateTimeColumnProcessorSchema

	/// <exclude/>
	public class DateTimeColumnProcessorSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public DateTimeColumnProcessorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public DateTimeColumnProcessorSchema(DateTimeColumnProcessorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("06b79045-dff3-4417-9552-df56bd39d8fb");
			Name = "DateTimeColumnProcessor";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("52abf94a-4a51-4e9b-afae-86480a04ff1e");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,3,221,86,75,111,219,70,16,62,43,64,254,195,84,189,80,128,64,221,101,91,134,35,71,134,208,214,53,44,57,61,4,57,172,200,161,189,192,146,75,236,46,21,171,182,255,123,103,31,148,248,176,156,0,117,47,213,193,38,135,243,250,190,249,134,203,130,229,168,75,150,32,172,81,41,166,101,102,226,185,44,50,126,95,41,102,184,44,226,5,23,184,204,75,169,204,199,15,79,31,63,12,42,205,139,123,88,237,180,193,252,164,115,31,95,9,185,97,130,255,237,66,123,79,215,248,104,226,91,188,175,4,83,159,31,75,133,90,147,155,62,248,53,123,80,120,204,30,47,88,98,164,226,104,35,201,231,87,133,247,148,7,230,130,105,61,133,75,102,112,205,115,156,75,81,229,197,141,146,9,213,145,202,185,78,38,19,56,229,197,3,42,110,82,153,64,162,48,59,27,94,203,226,6,149,230,212,100,97,58,97,79,235,91,212,149,48,47,195,201,172,78,160,171,60,103,106,87,223,219,223,69,1,188,208,134,21,196,164,204,192,60,112,13,137,237,7,232,130,128,150,132,147,111,4,66,38,21,148,62,185,69,86,55,11,137,43,11,91,38,42,212,113,93,105,210,40,245,245,18,51,70,157,124,226,69,74,161,145,217,149,40,179,104,217,105,120,52,134,107,26,42,156,65,65,255,200,225,8,31,163,209,55,74,90,86,27,193,147,208,234,17,79,152,194,91,12,157,214,97,231,179,49,116,187,161,18,79,142,249,195,148,136,9,163,42,59,65,26,214,141,171,239,61,254,245,112,122,211,217,143,103,174,144,154,212,237,25,17,127,228,141,24,10,29,65,79,169,227,125,238,73,55,249,105,201,20,203,29,213,103,195,74,163,34,120,5,38,86,254,195,217,29,221,211,96,107,67,124,58,113,222,46,56,16,127,164,104,116,215,74,5,237,204,35,155,96,48,133,13,211,24,117,30,193,19,188,4,194,177,72,61,231,237,1,80,145,18,149,161,245,153,218,107,67,129,152,190,215,4,202,58,33,200,45,45,45,79,17,174,42,158,90,156,236,139,213,246,154,88,191,91,166,112,54,107,219,226,154,137,174,231,201,219,104,254,64,243,32,83,7,133,111,41,69,3,200,107,66,88,219,215,6,24,89,239,160,95,184,49,144,252,171,220,46,36,55,118,99,235,102,126,118,242,46,203,112,118,203,190,251,132,173,81,247,188,73,18,68,14,145,244,37,132,57,10,143,69,42,52,149,42,244,236,230,240,214,80,46,128,92,235,103,158,122,71,0,108,164,20,132,115,23,252,93,141,11,93,35,138,104,249,108,138,128,91,86,102,15,246,28,218,141,145,150,156,208,218,86,251,98,169,132,56,113,143,92,45,223,13,217,247,172,217,234,76,145,56,67,149,182,154,227,121,165,20,73,201,90,233,90,16,4,28,187,116,131,58,195,202,236,4,189,6,47,236,84,240,119,153,48,1,207,208,125,40,132,252,254,215,3,55,184,178,7,152,110,131,129,52,92,140,124,167,60,131,200,55,234,183,167,143,170,14,240,254,158,217,128,205,153,94,222,71,90,169,164,205,255,63,9,203,225,121,95,89,5,81,44,139,76,66,226,197,18,76,228,246,99,49,249,36,161,163,196,219,86,37,38,60,227,73,93,140,62,67,240,145,62,70,74,65,218,169,117,58,252,58,142,191,13,131,22,219,133,227,235,42,223,160,90,72,149,51,19,110,46,41,101,206,196,10,45,177,116,158,141,94,91,138,48,239,253,74,188,214,143,39,204,123,130,188,176,204,245,101,27,104,27,244,20,222,220,188,133,146,249,159,46,65,212,202,179,143,250,141,190,30,246,145,238,166,199,232,21,154,165,94,208,129,73,109,126,46,24,245,148,70,67,255,9,216,204,114,87,104,143,1,211,97,216,169,193,57,52,61,226,134,75,112,152,182,29,220,106,119,58,4,97,141,151,175,128,243,156,237,108,100,84,67,24,183,192,212,104,123,218,106,229,244,78,47,111,239,249,79,28,56,255,253,217,121,216,161,185,71,228,240,68,126,24,62,157,71,152,28,174,107,161,216,175,131,184,21,214,116,106,237,200,54,176,212,112,136,221,223,131,8,127,137,142,109,126,99,229,183,76,245,150,253,249,217,143,228,248,137,212,72,208,9,30,5,93,133,33,29,94,16,193,208,118,127,99,122,222,218,54,58,155,253,253,3,251,23,126,56,4,13,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("06b79045-dff3-4417-9552-df56bd39d8fb"));
		}

		#endregion

	}

	#endregion

}

